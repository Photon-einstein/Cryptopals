name: C++ Static Analysis

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  static-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y clang-tidy cppcheck  libgtest-dev libssl-dev nlohmann-json3-dev

      - name: Run Static Code Analysis
        run: |
          echo "üîç Searching for CMakeLists.txt files (excluding 'external' and 'build' directories)..."

          CROW_INCLUDE_DIR=$(find . -name crow.h -exec dirname {} \; | head -n1)

          # Find all directories containing a CMakeLists.txt file, excluding 'build' and 'external' directories and everything inside them
          find . -type f -name "CMakeLists.txt" ! -path "*/build/*" ! -path "*/external/*" | while read cmake_file; do
              dir=$(dirname "$cmake_file")
              src_dir="$dir/src"

              # Run Clang-Tidy only if a src/ folder exists and is not inside 'external'
              if [ -d "$src_dir" ] && [[ "$src_dir" != *"/external"* ]]; then
                  echo "üöÄ Running Clang-Tidy in $src_dir"
                  for file in "$src_dir"/*.cpp; do
                      [ -f "$file" ] && clang-tidy "$file" -- -I"$src_dir" -I"$CROW_INCLUDE_DIR"
                  done
              fi

              # Run Clang-Tidy on cpp files in the 'tests' folder as well, excluding 'external'
              if [ -d "$dir/tests" ] && [[ "$dir" != *"/external"* ]]; then
                  echo "üöÄ Running Clang-Tidy in $dir/tests"
                  for file in "$dir/tests"/*.cpp; do
                      [ -f "$file" ] && clang-tidy "$file" -- -I"$dir/tests" -I"$CROW_INCLUDE_DIR"
                  done
              fi

              # Run Cppcheck only if a src/ folder exists and is not inside 'external'
              if [ -d "$src_dir" ] && [[ "$src_dir" != *"/external"* ]]; then
                  echo "üöÄ Running Cppcheck in $src_dir"
                  cppcheck --enable=all --inconclusive --force --error-exitcode=1 "$src_dir" --suppress=missingIncludeSystem
              fi

              # Run Cppcheck only if a tests/ folder exists and is not inside 'external'
              if [ -d "$dir/tests" ] && [[ "$dir" != *"/external"* ]]; then
                  tst_dir="$dir/tests"
                  echo "üöÄ Running Cppcheck in $tst_dir"

                  find "$tst_dir" -type f -name "*.cpp" ! -path "*/build/*" ! -path "*/external/*" | while read file; do
                      cppcheck --enable=all --std=c++17 --inconclusive --force --error-exitcode=1 --suppress=missingIncludeSystem --suppress=unusedStructMember --suppress=unusedFunction --suppress=unmatchedSuppression "$file"
                  done
              fi

          done

          echo "‚úÖ Static analysis completed."
          