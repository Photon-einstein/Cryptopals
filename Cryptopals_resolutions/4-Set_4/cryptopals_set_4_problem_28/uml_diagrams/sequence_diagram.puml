@startuml
participant Attacker
participant Server
participant FileSystemLibrary
participant JSONLibrary
participant SHA1

Attacker -> Attacker: tamperMessageTry(messageLocation)
activate Attacker

Attacker -> FileSystemLibrary: extractMessage(messageLocation)
activate FileSystemLibrary
FileSystemLibrary --> Attacker: message content
deactivate FileSystemLibrary

Attacker -> JSONLibrary: Parse JSON message
activate JSONLibrary
JSONLibrary --> Attacker: Parsed JSON object
deactivate JSONLibrary

Attacker -> Attacker: Modify "recipient" and "amount"

Attacker -> SHA1: hash(new forged JSON)
activate SHA1
SHA1 --> Attacker: newHash
deactivate SHA1

Attacker -> FileSystemLibrary: Write forged transaction
activate FileSystemLibrary
FileSystemLibrary --> Attacker:
deactivate FileSystemLibrary

Attacker -> Server: checkMac(jsonMessageTampered, newHash)

activate Server
Server -> FileSystemLibrary: Extract encrypted user keys

activate FileSystemLibrary
FileSystemLibrary --> Server: encrypted user keys
deactivate FileSystemLibrary

Server -> Server: decrypt(ciphertext, key, plaintext, iv)
Server -> Server: Prepend key from sender to the message
Server -> SHA1: hash(key || message)

activate SHA1
SHA1 --> Server: hashServer 
deactivate SHA1

Server -> Server: check if newHash == hashServer
Server --> Attacker: true/false
deactivate Server

deactivate Attacker
@enduml
