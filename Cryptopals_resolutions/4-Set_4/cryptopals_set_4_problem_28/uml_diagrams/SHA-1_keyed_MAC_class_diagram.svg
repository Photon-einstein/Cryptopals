<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1489px" preserveAspectRatio="none" style="width:1176px;height:1489px;background:#FFFFFF;" version="1.1" viewBox="0 0 1176 1489" width="1176px" zoomAndPan="magnify"><defs/><g><!--cluster PrintFormat--><g id="cluster_PrintFormat"><path d="M1051.5,26.5 L1137.5,26.5 A3.75,3.75 0 0 1 1140,29 L1147,51.5679 L1166.5,51.5679 A2.5,2.5 0 0 1 1169,54.0679 L1169,183 A2.5,2.5 0 0 1 1166.5,185.5 L1051.5,185.5 A2.5,2.5 0 0 1 1049,183 L1049,29 A2.5,2.5 0 0 1 1051.5,26.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1049" x2="1147" y1="51.5679" y2="51.5679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="85" x="1053" y="43.4659">PrintFormat</text></g><!--cluster MyCryptoLibrary--><g id="cluster_MyCryptoLibrary"><path d="M476.5,858 L594.5,858 A3.75,3.75 0 0 1 597,860.5 L604,883.0679 L1007.5,883.0679 A2.5,2.5 0 0 1 1010,885.5679 L1010,1479.5 A2.5,2.5 0 0 1 1007.5,1482 L476.5,1482 A2.5,2.5 0 0 1 474,1479.5 L474,860.5 A2.5,2.5 0 0 1 476.5,858 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="474" x2="604" y1="883.0679" y2="883.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="117" x="478" y="874.9659">MyCryptoLibrary</text></g><!--class Format--><g id="elem_Format"><rect codeLine="3" fill="#F1F1F1" height="105.2038" id="Format" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="87" x="1065.5" y="64.5"/><ellipse cx="1084.1" cy="80.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1088.2094,86.5 L1080.4906,86.5 L1080.4906,74.1094 L1088.2094,74.1094 L1088.2094,76.2656 L1082.9438,76.2656 L1082.9438,78.9375 L1087.7094,78.9375 L1087.7094,81.0938 L1082.9438,81.0938 L1082.9438,84.3438 L1088.2094,84.3438 L1088.2094,86.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="1098.9" y="85.932">Format</text><line style="stroke:#181818;stroke-width:0.5;" x1="1066.5" x2="1151.5" y1="96.5" y2="96.5"/><ellipse cx="1076.5" cy="111.534" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="26" x="1085.5" y="115.4659">HEX</text><ellipse cx="1076.5" cy="130.6019" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="1085.5" y="134.5339">DECIMAL</text><ellipse cx="1076.5" cy="149.6698" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="36" x="1085.5" y="153.6018">ASCII</text><line style="stroke:#181818;stroke-width:0.5;" x1="1066.5" x2="1151.5" y1="161.7038" y2="161.7038"/></g><!--class SHA--><g id="elem_SHA"><rect codeLine="38" fill="#F1F1F1" height="137.6837" id="SHA" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="503" x="490.5" y="896"/><ellipse cx="711.75" cy="918.706" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M714.7188,924.3466 Q714.1406,924.6435 713.5,924.7841 Q712.8594,924.9404 712.1563,924.9404 Q709.6563,924.9404 708.3281,923.2998 Q707.0156,921.6435 707.0156,918.5185 Q707.0156,915.3935 708.3281,913.7373 Q709.6563,912.081 712.1563,912.081 Q712.8594,912.081 713.5,912.2373 Q714.1563,912.3935 714.7188,912.6904 L714.7188,915.4091 Q714.0938,914.831 713.5,914.5654 Q712.9063,914.2841 712.2813,914.2841 Q710.9375,914.2841 710.25,915.3623 Q709.5625,916.4248 709.5625,918.5185 Q709.5625,920.6123 710.25,921.6904 Q710.9375,922.7529 712.2813,922.7529 Q712.9063,922.7529 713.5,922.4873 Q714.0938,922.206 714.7188,921.6279 L714.7188,924.3466 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="56" x="730.25" y="913.8281">&#171;abstract&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="744.75" y="932.31">SHA</text><line style="stroke:#181818;stroke-width:0.5;" x1="491.5" x2="992.5" y1="941.412" y2="941.412"/><line style="stroke:#181818;stroke-width:0.5;" x1="491.5" x2="992.5" y1="949.412" y2="949.412"/><ellipse cx="501.5" cy="964.446" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="510.5" y="968.378">SHA()</text><ellipse cx="501.5" cy="983.5139" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="510.5" y="987.4459">~SHA()</text><ellipse cx="501.5" cy="1002.5818" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="477" x="510.5" y="1006.5138">hash(inputV : std::vector&lt;unsigned char&gt;) : std::vector&lt;unsigned char&gt;</text><ellipse cx="501.5" cy="1021.6497" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="510.5" y="1025.5817">getHashOutputSize() : std::size_t</text></g><!--class SHA1--><g id="elem_SHA1"><rect codeLine="45" fill="#F1F1F1" height="353.0867" id="SHA1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="503" x="490.5" y="1113"/><ellipse cx="720.25" cy="1129" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M723.2188,1134.6406 Q722.6406,1134.9375 722,1135.0781 Q721.3594,1135.2344 720.6563,1135.2344 Q718.1563,1135.2344 716.8281,1133.5938 Q715.5156,1131.9375 715.5156,1128.8125 Q715.5156,1125.6875 716.8281,1124.0313 Q718.1563,1122.375 720.6563,1122.375 Q721.3594,1122.375 722,1122.5313 Q722.6563,1122.6875 723.2188,1122.9844 L723.2188,1125.7031 Q722.5938,1125.125 722,1124.8594 Q721.4063,1124.5781 720.7813,1124.5781 Q719.4375,1124.5781 718.75,1125.6563 Q718.0625,1126.7188 718.0625,1128.8125 Q718.0625,1130.9063 718.75,1131.9844 Q719.4375,1133.0469 720.7813,1133.0469 Q721.4063,1133.0469 722,1132.7813 Q722.5938,1132.5 723.2188,1131.9219 L723.2188,1134.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="740.75" y="1134.432">SHA1</text><line style="stroke:#181818;stroke-width:0.5;" x1="491.5" x2="992.5" y1="1145" y2="1145"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1157.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="510.5" y="1163.9659">_sizeOutputHash : std::size_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1176.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="510.5" y="1183.0339">_inputVpadded : std::vector&lt;unsigned char&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1195.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="510.5" y="1202.1018">_h0 : uint32_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1214.2377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="510.5" y="1221.1697">_h1 : uint32_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1233.3056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="510.5" y="1240.2376">_h2 : uint32_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1252.3735"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="510.5" y="1259.3055">_h3 : uint32_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1271.4415"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="510.5" y="1278.3734">_h4 : uint32_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1290.5094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="510.5" y="1297.4414">_ml : uint64_t</text><line style="stroke:#181818;stroke-width:0.5;" x1="491.5" x2="992.5" y1="1305.5433" y2="1305.5433"/><ellipse cx="501.5" cy="1320.5773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="510.5" y="1324.5093">SHA1()</text><ellipse cx="501.5" cy="1339.6452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="510.5" y="1343.5772">~SHA1()</text><ellipse cx="501.5" cy="1358.7131" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="510.5" y="1362.6451">getHashOutputSize() : std::size_t</text><ellipse cx="501.5" cy="1377.781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="477" x="510.5" y="1381.713">hash(inputV : std::vector&lt;unsigned char&gt;) : std::vector&lt;unsigned char&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1393.849"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="280" x="510.5" y="1400.7809">initialization(sizeInputV : std::size_t) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1412.9169"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="510.5" y="1419.8489">preProcessing(inputV : std::vector&lt;unsigned char&gt;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1431.9848"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="510.5" y="1438.9168">processing() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="498.5" y="1451.0527"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="510.5" y="1457.9847">leftRotate(value : uint32_t, bits : int) : uint32_t</text></g><!--class Server--><g id="elem_Server"><rect codeLine="10" fill="#F1F1F1" height="486.5621" id="Server" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="796" x="7" y="306"/><ellipse cx="379.25" cy="322" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M382.2188,327.6406 Q381.6406,327.9375 381,328.0781 Q380.3594,328.2344 379.6563,328.2344 Q377.1563,328.2344 375.8281,326.5938 Q374.5156,324.9375 374.5156,321.8125 Q374.5156,318.6875 375.8281,317.0313 Q377.1563,315.375 379.6563,315.375 Q380.3594,315.375 381,315.5313 Q381.6563,315.6875 382.2188,315.9844 L382.2188,318.7031 Q381.5938,318.125 381,317.8594 Q380.4063,317.5781 379.7813,317.5781 Q378.4375,317.5781 377.75,318.6563 Q377.0625,319.7188 377.0625,321.8125 Q377.0625,323.9063 377.75,324.9844 Q378.4375,326.0469 379.7813,326.0469 Q380.4063,326.0469 381,325.7813 Q381.5938,325.5 382.2188,324.9219 L382.2188,327.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="399.75" y="327.432">Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="802" y1="338" y2="338"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="350.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="27" y="356.9659">_debugFlag : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="369.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="27" y="376.0339">_sha : std::shared_ptr&lt;MyCryptoLibrary::SHA&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="388.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="27" y="395.1018">_plaintextV : std::vector&lt;unsigned char&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="407.2377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="27" y="414.1697">_plaintext : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="426.3056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="27" y="433.2376">_hashOpenSSL : std::vector&lt;unsigned char&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="445.3735"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="27" y="452.3055">_hash : std::vector&lt;unsigned char&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="464.4415"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="27" y="471.3734">_key : std::vector&lt;unsigned char&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="483.5094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="27" y="490.4414">_keyServer : std::vector&lt;unsigned char&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="502.5773"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="27" y="509.5093">_iv : unsigned char[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="521.6452"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="27" y="528.5772">_keysFileLocation : std::string</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="802" y1="536.6792" y2="536.6792"/><ellipse cx="18" cy="551.7131" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="27" y="555.6451">Server(debugFlag : bool)</text><ellipse cx="18" cy="570.781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="27" y="574.713">~Server()</text><ellipse cx="18" cy="589.849" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="713" x="27" y="593.7809">hashSHA1(inputV : std::vector&lt;unsigned char&gt;, originalMessage : std::string) : std::vector&lt;unsigned char&gt;</text><ellipse cx="18" cy="608.9169" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="488" x="27" y="612.8489">checkMac(message : std::string, mac : std::vector&lt;unsigned char&gt;) : bool</text><ellipse cx="18" cy="627.9848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="27" y="631.9168">getHashOutputSize() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="644.0527"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="770" x="27" y="650.9847">printMessage(originalMessage : std::string, hash : std::vector&lt;unsigned char&gt;, format : PrintFormat::Format) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="663.1206"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="27" y="670.0526">setKey(message : std::string) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="682.1885"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="526" x="27" y="689.1205">prependKey(inputV : std::vector&lt;unsigned char&gt;) : std::vector&lt;unsigned char&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="701.2565"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="316" x="27" y="708.1884">extractFile(fileLocation : std::string) : std::string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="720.3244"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="136" x="27" y="727.2564">handleErrors() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="739.3923"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="763" x="27" y="746.3243">decrypt(ciphertext : std::vector&lt;unsigned char&gt;, key : std::string, plaintext : std::string, iv : unsigned char *) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="758.4602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="422" x="27" y="765.3922">removePKCS7Padding(data : std::vector&lt;unsigned char&gt;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="777.5281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="404" x="27" y="784.4601">hexToBytes(hexStr : std::string) : std::vector&lt;unsigned char&gt;</text></g><!--class Attacker--><g id="elem_Attacker"><rect codeLine="68" fill="#F1F1F1" height="219.6113" id="Attacker" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="426" x="604" y="7"/><ellipse cx="785.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M788.2188,28.6406 Q787.6406,28.9375 787,29.0781 Q786.3594,29.2344 785.6563,29.2344 Q783.1563,29.2344 781.8281,27.5938 Q780.5156,25.9375 780.5156,22.8125 Q780.5156,19.6875 781.8281,18.0313 Q783.1563,16.375 785.6563,16.375 Q786.3594,16.375 787,16.5313 Q787.6563,16.6875 788.2188,16.9844 L788.2188,19.7031 Q787.5938,19.125 787,18.8594 Q786.4063,18.5781 785.7813,18.5781 Q784.4375,18.5781 783.75,19.6563 Q783.0625,20.7188 783.0625,22.8125 Q783.0625,24.9063 783.75,25.9844 Q784.4375,27.0469 785.7813,27.0469 Q786.4063,27.0469 787,26.7813 Q787.5938,26.5 788.2188,25.9219 L788.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="805.75" y="28.432">Attacker</text><line style="stroke:#181818;stroke-width:0.5;" x1="605" x2="1029" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="612" y="51.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="624" y="57.9659">_server : std::shared_ptr&lt;Server&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="612" y="70.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="624" y="77.0339">_sha : std::shared_ptr&lt;MyCryptoLibrary::SHA&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="612" y="89.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="624" y="96.1018">_writeToFile : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="605" x2="1029" y1="104.2038" y2="104.2038"/><ellipse cx="615" cy="119.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="400" x="624" y="123.1697">Attacker(server : std::shared_ptr&lt;Server&gt;, writeToFile : bool)</text><ellipse cx="615" cy="138.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="624" y="142.2376">~Attacker()</text><ellipse cx="615" cy="157.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="326" x="624" y="161.3055">setServer(server : std::shared_ptr&lt;Server&gt;) : void</text><ellipse cx="615" cy="176.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="375" x="624" y="180.3734">tamperMessageTry(messageLocation : std::string) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="612" y="192.5094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="392" x="624" y="199.4414">extractMessage(messageLocation : std::string) : std::string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="612" y="211.5773"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="394" x="624" y="218.5093">toHexString(data : std::vector&lt;unsigned char&gt;) : std::string</text></g><!--reverse link SHA to SHA1--><g id="link_SHA_SHA1"><path codeLine="65" d="M742,1052.39 C742,1075.69 742,1084.91 742,1112.71 " fill="none" id="SHA-backto-SHA1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="742,1034.39,736,1052.39,748,1052.39,742,1034.39" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="45" x="743" y="1078.897">inherits</text></g><!--link Server to SHA--><g id="link_Server_SHA"><path codeLine="81" d="M602.74,793.13 C633.3,830.62 658.7389,861.8394 682.4689,890.9494 " fill="none" id="Server-to-SHA" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="686.26,895.6,683.6738,886.0968,683.1008,891.7245,677.473,891.1515,686.26,895.6" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="31" x="644" y="837.897">has a</text></g><!--link Attacker to SHA--><g id="link_Attacker_SHA"><path codeLine="82" d="M832.26,227.1 C847.79,361.86 864.03,597.28 821,793 C813.21,828.45 800.0468,859.9654 784.5468,890.3454 " fill="none" id="Attacker-to-SHA" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="781.82,895.69,789.4733,889.491,784.0924,891.2362,782.3472,885.8553,781.82,895.69" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="31" x="849" y="554.897">has a</text></g><!--link Attacker to Server--><g id="link_Attacker_Server"><path codeLine="83" d="M712.5,227.19 C689.14,251.6 667.5984,274.1052 641.3384,301.5452 " fill="none" id="Attacker-to-Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="637.19,305.88,646.3025,302.1434,640.647,302.2676,640.5227,296.6122,637.19,305.88" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="31" x="685" y="271.897">has a</text></g><!--SRC=[jLPjRzem4FxEhx3wAGoOHbjjKeIG66i5AcXegQP9qrIPv0fMapYo3Iljs6_VEN5I1mYasiQ7DhuxFpxVotEEQGGoeJwGcM2nkkOYeeeyDmZ-85v5f2JHlzRewXjvMNsw6ewdWuab6NZ3yJXTRXlRHiCFgPJ40x46OM0wv2w0-Mfn7T85SScSyp2NooL5YLI1w-AdWE0kKQ8ttGp59b5ymkQ2YethUgD1Fz-IX1GzXqVrDT-v1bznqLl5aYrY28YFI7soPrySfF3gYrozf7BvEO7OyoP7yMpxMeOFiAbhPw9LnvgjqQoa-lx3GfBNB8G9zwbYF3vmuVHFowJ7sSrAqwX_6ts-rdV657GT5YUh4t5l4oxOWiKqd8AKT05bBvgdRzd2R_0VfjHteaCGRH9H_oXCqwwo5bc06kaihnHwxx4dSBJ1chF0H2xHlM3STOwwtoOdyzyczraFkNQFkMxsV-Ta2Ue6DeVlkUSaO9a6shn66ffrgWcRGb1VwPfnxYiBftcmSPOq3aAu4e8BMSIJF4k52FxM60NWwqPsV9OiGTXDM14wgsdoW5VqRvlijm9vK-M8W8YlONOpz3xCQ13WVYUWYfuCuI6i9JpUyeyR1TB1Jq-9rrJu2nXoPLomyGxZ6U8qN3eQa5wFpcMQh7xV9cUjD6sQj-wEGDVhFogOOzsK1G1NTyhCWl8DkfRNclVHCaCOMVraxS_fBdKymPIX9xKSr1JzJXS65it5UHbjsQrId5SfBgeKbnMAA3IAzvUeA6UgkvUgigHUQFzBNZk4nKmn6hAdb08SVU2u19-vK6AbWfbcWll8ORglQlgqXr407D26SA- -S6mSSDOqN84L-pQPCoLHWElcRavC5QOTzAlJoGhH9MSiHZh2RMSlBvQ1KjH_iDyiiZILhUT9DXtxV_66-Oc7motNn9kFAZEhSZUSKwUtoJv8CRyBb5o2SyRCz5EufUYtYA9H0iBCmbjHZAhgKM6DB3DVyibwSgkrt2LTnKSfrzPcxeDOc6tprkfq-hka-rQN2HO7TXQXPusY85vfMZpcSkqV]--></g></svg>