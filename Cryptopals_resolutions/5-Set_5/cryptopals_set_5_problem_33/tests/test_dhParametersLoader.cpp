#include <gtest/gtest.h>

#include <filesystem>
#include <string>
#include <vector>

#include "../include/DhParametersLoader.hpp"
#include "../include/DiffieHellman.hpp"

class DhParametersLoaderTest : public ::testing::Test {
protected:
  // cppcheck-suppress unusedFunction
  void SetUp() override {
    // NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)
    _diffieHellman = std::make_unique<MyCryptoLibrary::DiffieHellman>(
        _dhDebugFlag); // Shared setup
  }

  // cppcheck-suppress unusedFunction
  void TearDown() override {
    // NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)
    // Cleanup (if needed)
  }

  // cppcheck-suppress unusedStructMember
  std::map<std::string, DhParametersLoader::DhParameters> _dhParametersMap;
  std::unique_ptr<MyCryptoLibrary::DiffieHellman> _diffieHellman;
  const bool _dhDebugFlag{false};
};

/**
 * @test Test the correctness of the method loadDhParameters
 * @brief Ensures that the parameters retrieved, using the correct input
 * filename retrieve the correct data.
 */
TEST_F(DhParametersLoaderTest,
       loadDhParameters_WithCorrectFilename_ShouldMatchReference) {
  _dhParametersMap = DhParametersLoader::loadDhParameters(
      _diffieHellman->getDhParametersFilenameLocation());
  ASSERT_EQ(_dhParametersMap.size(), 6);
  ASSERT_EQ(_dhParametersMap["cryptopals-group-33-small"]._pHex, "25");
  ASSERT_EQ(_dhParametersMap["cryptopals-group-33-small"]._gHex, "05");
  ASSERT_EQ(
      _dhParametersMap["rfc3526-group-14"]._pHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBE"
      "A63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51"
      "C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE"
      "9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8"
      "FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC98"
      "04F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C5"
      "5DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8A"
      "ACAA68FFFFFFFFFFFFFFFF");
  ASSERT_EQ(_dhParametersMap["rfc3526-group-14"]._gHex, "02");
  ASSERT_EQ(
      _dhParametersMap["rfc3526-group-15"]._pHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA"
      "63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C2"
      "45E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F2"
      "4117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24"
      "CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F17"
      "46C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F"
      "4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DA"
      "D33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85"
      "A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A086"
      "4D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24F"
      "A074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF");
  ASSERT_EQ(_dhParametersMap["rfc3526-group-15"]._gHex, "02");
  ASSERT_EQ(
      _dhParametersMap["rfc3526-group-16"]._pHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA"
      "63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C2"
      "45E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F2"
      "4117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24"
      "CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F17"
      "46C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F"
      "4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DA"
      "D33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85"
      "A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A086"
      "4D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24F"
      "A074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788719A10BDBA5"
      "B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8E"
      "FC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE"
      "2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4D"
      "F435C934063199FFFFFFFFFFFFFFFF");
  ASSERT_EQ(_dhParametersMap["rfc3526-group-16"]._gHex, "02");
  ASSERT_EQ(
      _dhParametersMap["rfc3526-group-17"]._pHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA"
      "63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C2"
      "45E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F2"
      "4117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24"
      "CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F17"
      "46C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F"
      "4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DA"
      "D33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85"
      "A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A086"
      "4D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24F"
      "A074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788719A10BDBA5"
      "B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8E"
      "FC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE"
      "2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4D"
      "F435C93402849236C3FAB4D27C7026C1D4DCB2602646DEC9751E763DBA37BDF8FF9406A"
      "D9E530EE5DB382F413001AEB06A53ED9027D831179727B0865A8918DA3EDBECBF9B14ED"
      "44CE6CBACED4BB1BDB7F1447E6CC254B332051512BD7AF426FB8F401378CD2BF5983CA0"
      "1C64B92ECF032EA15D1721D03F482D7CE6E74FEF6D55E702F46980C82B5A84031900B1C"
      "9E59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54BD407B22B4154AACC8F6"
      "D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58BB7C5DA76F550AA3D8A1F"
      "BFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C0468043E8F663F4860EE12B"
      "F2D5B0B7474D6E694F91E6DCC4024FFFFFFFFFFFFFFFF");
  ASSERT_EQ(_dhParametersMap["rfc3526-group-17"]._gHex, "02");
  ASSERT_EQ(
      _dhParametersMap["rfc3526-group-18"]._pHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA"
      "63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C2"
      "45E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F2"
      "4117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24"
      "CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F17"
      "46C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F"
      "4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DA"
      "D33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85"
      "A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A086"
      "4D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24F"
      "A074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788719A10BDBA5"
      "B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8E"
      "FC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE"
      "2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4D"
      "F435C93402849236C3FAB4D27C7026C1D4DCB2602646DEC9751E763DBA37BDF8FF9406A"
      "D9E530EE5DB382F413001AEB06A53ED9027D831179727B0865A8918DA3EDBEBCF9B14ED"
      "44CE6CBACED4BB1BDB7F1447E6CC254B332051512BD7AF426FB8F401378CD2BF5983CA0"
      "1C64B92ECF032EA15D1721D03F482D7CE6E74FEF6D55E702F46980C82B5A84031900B1C"
      "9E59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54BD407B22B4154AACC8F6"
      "D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58BB7C5DA76F550AA3D8A1F"
      "BFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C0468043E8F663F4860EE12B"
      "F2D5B0B7474D6E694F91E6DBE115974A3926F12FEE5E438777CB6A932DF8CD8BEC4D073"
      "B931BA3BC832B68D9DD300741FA7BF8AFC47ED2576F6936BA424663AAB639C5AE4F5683"
      "423B4742BF1C978238F16CBE39D652DE3FDB8BEFC848AD922222E04A4037C0713EB57A8"
      "1A23F0C73473FC646CEA306B4BCBC8862F8385DDFA9D4B7FA2C087E879683303ED5BDD3"
      "A062B3CF5B3A278A66D2A13F83F44F82DDF310EE074AB6A364597E899A0255DC164F31C"
      "C50846851DF9AB48195DED7EA1B1D510BD7EE74D73FAF36BC31ECFA268359046F4EB879"
      "F924009438B481C6CD7889A002ED5EE382BC9190DA6FC026E479558E4475677E9AA9E30"
      "50E2765694DFC81F56E880B96E7160C980DD98EDD3DFFFFFFFFFFFFFFFFF");
  ASSERT_EQ(_dhParametersMap["rfc3526-group-18"]._gHex, "02");
}

/**
 * @test Test the correctness of the method loadDhParameters
 * @brief Ensures that if a faulty input filename is provided,
 * the loadDhParameters() will throw a runtime exception error.
 */
TEST_F(DhParametersLoaderTest,
       loadDhParameters_WithIncorrectFilename_ShouldMatchThrowAnException) {
  std::string faultyFilename =
      _diffieHellman->getDhParametersFilenameLocation();
  faultyFilename[0] ^= 0x01; // flip one bit
  try {
    _dhParametersMap = DhParametersLoader::loadDhParameters(faultyFilename);
  } catch (const std::runtime_error &e) {
    const std::string errorMessage =
        std::string("DhParametersLoader log | loadDhParameters(): ") +
        std::string("Could not open DH parameters file: '") + faultyFilename +
        "'.";
    EXPECT_STREQ(e.what(), errorMessage.c_str());
  } catch (...) {
    FAIL() << "Expected std::invalid_argument, but got a different exception";
  }
}