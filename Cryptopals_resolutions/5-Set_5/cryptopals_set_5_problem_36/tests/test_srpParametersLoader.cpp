#include <gtest/gtest.h>

#include <filesystem>
#include <string>
#include <vector>

#include "../include/SecureRemotePassword.hpp"
#include "../include/SrpParametersLoader.hpp"

class SrpParametersLoaderTest : public ::testing::Test {
protected:
  // cppcheck-suppress unusedFunction
  void SetUp() override {
    // NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)
    _secureRemotePassword =
        std::make_unique<MyCryptoLibrary::SecureRemotePassword>(
            _secureRemotePasswordDebugFlag); // Shared setup
  }

  // cppcheck-suppress unusedFunction
  void TearDown() override {
    // NOLINTNEXTLINE(clang-analyzer-optin.cplusplus.VirtualCall)
    // Cleanup (if needed)
  }

  // cppcheck-suppress unusedStructMember
  std::map<unsigned int, SrpParametersLoader::SrpParameters> _srpParametersMap;
  std::unique_ptr<MyCryptoLibrary::SecureRemotePassword> _secureRemotePassword;
  const bool _secureRemotePasswordDebugFlag{false};
};

/**
 * @test Test the correctness of the method loadSrpParameters
 * @brief Ensures that the parameters retrieved, using the correct input
 * filename retrieve the correct data.
 */
TEST_F(SrpParametersLoaderTest,
       loadSrpParameters_WithCorrectFilename_ShouldMatchReference) {
  _srpParametersMap = SrpParametersLoader::loadSrpParameters(
      MyCryptoLibrary::SecureRemotePassword::
          getSrpParametersFilenameLocation());
  ASSERT_EQ(_srpParametersMap.size(), 7);
  // Group ID 1 test
  ASSERT_EQ(_srpParametersMap[1]._groupId, 1);
  ASSERT_EQ(_srpParametersMap[1]._sizeBits, 1024);
  ASSERT_EQ(
      _srpParametersMap[1]._nHex,
      "EEAF0AB9ADB38DD69C33F80AFA8FC5E86072618775FF3C0B9EA2314C9C256576D674D"
      "F7496EA81D3383B4813D692C6E0E0D5D8E250B98BE48E495C1D6089DAD15DC7D7B461"
      "54D6B6CE8EF4AD69B15D4982559B297BCF1885C529F566660E57EC68EDBC3C05726CC"
      "02FD4CBF4976EAA9AFD5138FE8376435B9FC61D2FC0EB06E3");
  ASSERT_EQ(_srpParametersMap[1]._g, 2);
  ASSERT_EQ(_srpParametersMap[1]._groupName, "SRP 1024-bit Group 1");
  ASSERT_EQ(_srpParametersMap[1]._hashName, "SHA-256");
  // Group ID 2 test
  ASSERT_EQ(_srpParametersMap[2]._groupId, 2);
  ASSERT_EQ(_srpParametersMap[2]._sizeBits, 1536);
  ASSERT_EQ(
      _srpParametersMap[2]._nHex,
      "9DEF3CAFB939277AB1F12A8617A47BBBDBA51DF499AC4C80BEEEA9614B19CC4D5F4F5"
      "F556E27CBDE51C6A94BE4607A291558903BA0D0F84380B655BB9A22E8DCDF028A7CEC"
      "67F0D08134B1C8B97989149B609E0BE3BAB63D47548381DBC5B1FC764E3F4B53DD9DA"
      "1158BFD3E2B9C8CF56EDF019539349627DB2FD53D24B7C48665772E437D6C7F8CE442"
      "734AF7CCB7AE837C264AE3A9BEB87F8A2FE9B8B5292E5A021FFF5E91479E8CE7A28C2"
      "442C6F315180F93499A234DCF76E3FED135F9BB");
  ASSERT_EQ(_srpParametersMap[2]._g, 2);
  ASSERT_EQ(_srpParametersMap[2]._groupName, "SRP 1536-bit Group 2");
  ASSERT_EQ(_srpParametersMap[2]._hashName, "SHA-256");
  // Group ID 3 test
  ASSERT_EQ(_srpParametersMap[3]._groupId, 3);
  ASSERT_EQ(_srpParametersMap[3]._sizeBits, 2048);
  ASSERT_EQ(
      _srpParametersMap[3]._nHex,
      "AC6BDB41324A9A9BF166DE5E1389582FAF72B6651987EE07FC3192943DB56050A3732"
      "9CBB4A099ED8193E0757767A13DD52312AB4B03310DCD7F48A9DA04FD50E8083969ED"
      "B767B0CF6095179A163AB3661A05FBD5FAAAE82918A9962F0B93B855F97993EC975EE"
      "AA80D740ADBF4FF747359D041D5C33EA71D281E446B14773BCA97B43A23FB801676BD"
      "207A436C6481F1D2B9078717461A5B9D32E688F87748544523B524B0D57D5EA77A277"
      "5D2ECFA032CFBDBF52FB3786160279004E57AE6AF874E7303CE53299CCC041C7BC308"
      "D82A5698F3A8D0C38271AE35F8E9DBFBB694B5C803D89F7AE435DE236D525F54759B6"
      "5E372FCD68EF20FA7111F9E4AFF73");
  ASSERT_EQ(_srpParametersMap[3]._g, 2);
  ASSERT_EQ(_srpParametersMap[3]._groupName, "SRP 2048-bit Group 3");
  ASSERT_EQ(_srpParametersMap[3]._hashName, "SHA-256");
  // Group ID 4 test
  ASSERT_EQ(_srpParametersMap[4]._groupId, 4);
  ASSERT_EQ(_srpParametersMap[4]._sizeBits, 3072);
  ASSERT_EQ(
      _srpParametersMap[4]._nHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BB"
      "EA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D"
      "51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA"
      "5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A6916"
      "3FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4"
      "ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A2"
      "8FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA0510157"
      "28E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA7157"
      "5D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2E"
      "E6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C77"
      "0988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFF"
      "FFFFFFFFF");
  ASSERT_EQ(_srpParametersMap[4]._g, 5);
  ASSERT_EQ(_srpParametersMap[4]._groupName, "SRP 3072-bit Group 4");
  ASSERT_EQ(_srpParametersMap[4]._hashName, "SHA-256");
  // Group ID 5 test
  ASSERT_EQ(_srpParametersMap[5]._groupId, 5);
  ASSERT_EQ(_srpParametersMap[5]._sizeBits, 4096);
  ASSERT_EQ(
      _srpParametersMap[5]._nHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BB"
      "EA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D"
      "51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA"
      "5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A6916"
      "3FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4"
      "ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A2"
      "8FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA0510157"
      "28E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA7157"
      "5D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2E"
      "E6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C77"
      "0988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C1"
      "2A787E6D788719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD4"
      "4CE8DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A22"
      "33BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA"
      "988D8FDDC186FFB7DC90A6C08F4DF435C934063199FFFFFFFFFFFFFFFF");
  ASSERT_EQ(_srpParametersMap[5]._g, 5);
  ASSERT_EQ(_srpParametersMap[5]._groupName, "SRP 4096-bit Group 5");
  ASSERT_EQ(_srpParametersMap[5]._hashName, "SHA-384");
  // Group ID 6 test
  ASSERT_EQ(_srpParametersMap[6]._groupId, 6);
  ASSERT_EQ(_srpParametersMap[6]._sizeBits, 6144);
  ASSERT_EQ(
      _srpParametersMap[6]._nHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBE"
      "A63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51"
      "C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE"
      "9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8"
      "FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC98"
      "04F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C5"
      "5DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8A"
      "AAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7D"
      "B3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA"
      "06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD9"
      "46E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788"
      "719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB"
      "04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7"
      "ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FF"
      "B7DC90A6C08F4DF435C93402849236C3FAB4D27C7026C1D4DCB2602646DEC9751E763D"
      "BA37BDF8FF9406AD9E530EE5DB382F413001AEB06A53ED9027D831179727B0865A8918"
      "DA3EDBEBCF9B14ED44CE6CBACED4BB1BDB7F1447E6CC254B332051512BD7AF426FB8F4"
      "01378CD2BF5983CA01C64B92ECF032EA15D1721D03F482D7CE6E74FEF6D55E702F4698"
      "0C82B5A84031900B1C9E59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54B"
      "D407B22B4154AACC8F6D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58B"
      "B7C5DA76F550AA3D8A1FBFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C04"
      "68043E8F663F4860EE12BF2D5B0B7474D6E694F91E6DCC4024FFFFFFFFFFFFFFFF");
  ASSERT_EQ(_srpParametersMap[6]._g, 5);
  ASSERT_EQ(_srpParametersMap[6]._groupName, "SRP 6144-bit Group 6");
  ASSERT_EQ(_srpParametersMap[6]._hashName, "SHA-512");
  // Group ID 7 test
  ASSERT_EQ(_srpParametersMap[7]._groupId, 7);
  ASSERT_EQ(_srpParametersMap[7]._sizeBits, 8192);
  ASSERT_EQ(
      _srpParametersMap[7]._nHex,
      "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBE"
      "A63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51"
      "C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE"
      "9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8"
      "FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC98"
      "04F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C5"
      "5DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8A"
      "AAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7D"
      "B3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA"
      "06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD9"
      "46E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788"
      "719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB"
      "04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7"
      "ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FF"
      "B7DC90A6C08F4DF435C93402849236C3FAB4D27C7026C1D4DCB2602646DEC9751E763D"
      "BA37BDF8FF9406AD9E530EE5DB382F413001AEB06A53ED9027D831179727B0865A8918"
      "DA3EDBEBCF9B14ED44CE6CBACED4BB1BDB7F1447E6CC254B332051512BD7AF426FB8F4"
      "01378CD2BF5983CA01C64B92ECF032EA15D1721D03F482D7CE6E74FEF6D55E702F4698"
      "0C82B5A84031900B1C9E59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54B"
      "D407B22B4154AACC8F6D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58B"
      "B7C5DA76F550AA3D8A1FBFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C04"
      "68043E8F663F4860EE12BF2D5B0B7474D6E694F91E6DBE115974A3926F12FEE5E43877"
      "7CB6A932DF8CD8BEC4D073B931BA3BC832B68D9DD300741FA7BF8AFC47ED2576F6936B"
      "A424663AAB639C5AE4F5683423B4742BF1C978238F16CBE39D652DE3FDB8BEFC848AD9"
      "22222E04A4037C0713EB57A81A23F0C73473FC646CEA306B4BCBC8862F8385DDFA9D4B"
      "7FA2C087E879683303ED5BDD3A062B3CF5B3A278A66D2A13F83F44F82DDF310EE074AB"
      "6A364597E899A0255DC164F31CC50846851DF9AB48195DED7EA1B1D510BD7EE74D73FA"
      "F36BC31ECFA268359046F4EB879F924009438B481C6CD7889A002ED5EE382BC9190DA6"
      "FC026E479558E4475677E9AA9E3050E2765694DFC81F56E880B96E7160C980DD98EDD3"
      "DFFFFFFFFFFFFFFFFF");
  ASSERT_EQ(_srpParametersMap[7]._g, 19);
  ASSERT_EQ(_srpParametersMap[7]._groupName, "SRP 8192-bit Group 7");
  ASSERT_EQ(_srpParametersMap[7]._hashName, "SHA-512");
}

/**
 * @test Test the correctness of the method loadSrpParameters
 * @brief Ensures that if a faulty input filename is provided,
 * the loadSrpParameters() will throw a runtime exception error.
 */
TEST_F(SrpParametersLoaderTest,
       loadSrpParameters_WithIncorrectFilename_ShouldMatchThrowAnException) {
  std::string faultyFilename =
      MyCryptoLibrary::SecureRemotePassword::getSrpParametersFilenameLocation();
  faultyFilename[0] ^= 0x01; // flip one bit
  try {
    _srpParametersMap = SrpParametersLoader::loadSrpParameters(faultyFilename);
  } catch (const std::runtime_error &e) {
    const std::string errorMessage =
        std::string("SrpParametersLoader log | loadSrpParameters(): ") +
        std::string("Could not open SRP parameters file: '") + faultyFilename +
        "'.";
    EXPECT_STREQ(e.what(), errorMessage.c_str());
  } catch (...) {
    FAIL() << "Expected std::invalid_argument, but got a different exception";
  }
}
