import hashlib


def hex_to_bytes(hexstr):
    return bytes.fromhex(hexstr)


def hash_bytes(hash_name, data):
    hash_name = hash_name.replace("-", "").lower()
    if hash_name == "sha1":
        h = hashlib.sha1()
    elif hash_name == "sha256":
        h = hashlib.sha256()
    elif hash_name == "sha384":
        h = hashlib.sha384()
    elif hash_name == "sha512":
        h = hashlib.sha512()
    else:
        raise ValueError(f"Unsupported hash: {hash_name}")
    h.update(data)
    return h.digest()


def calculateM(hash_name, N_hex, g_hex, username, salt_hex, A_hex, B_hex, K_hex):
    # H(N)
    N_bytes = hex_to_bytes(N_hex)
    hN = hash_bytes(hash_name, N_bytes)
    # H(g)
    g_bytes = hex_to_bytes(g_hex)
    hg = hash_bytes(hash_name, g_bytes)
    # H(U)
    hu = hash_bytes(hash_name, username.encode("utf-8"))
    # H(N) XOR H(g)
    hn_xor_hg = bytes(a ^ b for a, b in zip(hN, hg))
    # salt, A, B, K as bytes
    salt_bytes = hex_to_bytes(salt_hex)
    A_bytes = hex_to_bytes(A_hex)
    B_bytes = hex_to_bytes(B_hex)
    K_bytes = hex_to_bytes(K_hex)
    # Concatenate all parts
    m_input = hn_xor_hg + hu + salt_bytes + A_bytes + B_bytes + K_bytes
    # Hash the concatenated value
    m = hash_bytes(hash_name, m_input)
    return m.hex().upper()


if __name__ == "__main__":
    # Test values
    N_hex = (
        "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBE"
        "A63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51"
        "C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE"
        "9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8"
        "FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC98"
        "04F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C5"
        "5DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8A"
        "AAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7D"
        "B3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA"
        "06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD9"
        "46E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788"
        "719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB"
        "04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7"
        "ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FF"
        "B7DC90A6C08F4DF435C93402849236C3FAB4D27C7026C1D4DCB2602646DEC9751E763D"
        "BA37BDF8FF9406AD9E530EE5DB382F413001AEB06A53ED9027D831179727B0865A8918"
        "DA3EDBEBCF9B14ED44CE6CBACED4BB1BDB7F1447E6CC254B332051512BD7AF426FB8F4"
        "01378CD2BF5983CA01C64B92ECF032EA15D1721D03F482D7CE6E74FEF6D55E702F4698"
        "0C82B5A84031900B1C9E59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54B"
        "D407B22B4154AACC8F6D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58B"
        "B7C5DA76F550AA3D8A1FBFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C04"
        "68043E8F663F4860EE12BF2D5B0B7474D6E694F91E6DBE115974A3926F12FEE5E43877"
        "7CB6A932DF8CD8BEC4D073B931BA3BC832B68D9DD300741FA7BF8AFC47ED2576F6936B"
        "A424663AAB639C5AE4F5683423B4742BF1C978238F16CBE39D652DE3FDB8BEFC848AD9"
        "22222E04A4037C0713EB57A81A23F0C73473FC646CEA306B4BCBC8862F8385DDFA9D4B"
        "7FA2C087E879683303ED5BDD3A062B3CF5B3A278A66D2A13F83F44F82DDF310EE074AB"
        "6A364597E899A0255DC164F31CC50846851DF9AB48195DED7EA1B1D510BD7EE74D73FA"
        "F36BC31ECFA268359046F4EB879F924009438B481C6CD7889A002ED5EE382BC9190DA6"
        "FC026E479558E4475677E9AA9E3050E2765694DFC81F56E880B96E7160C980DD98EDD3"
        "DFFFFFFFFFFFFFFFFF"
    )
    g = 19
    g_hex = format(g, "X")  # Convert integer g to hex string (uppercase, no '0x')
    username = "Bob"
    salt_hex = (
        "4118F5DFB7D944C02FAEDBED7982BF5505BF4B681A14EA54C5D2F2471BC2C793"
        "CE74D80D8D889A85E34BD536355A3E059AC9C34331D83FC16C757C214D99246A"
    )
    A_hex = (
        "F6FDBCA9750B211E9A12DE1D60E54C7942C65D1D30826E552824E10A0777FEA1"
        "B38EE8CE5F2AC5D3BE76886D3F630EF44584382E8C303D8249420D08586B52F0"
        "81D10B0D9C4187D9CE7153E5E3190B309E7255296BDD9E4166A515C48848BF6A"
        "0F18C8C711D75429628D0A209FC603A808683D526B651F0C43F82268C203F054"
        "3ED36219F7B4534F445B7025DB6799E8EA3290682EC59DB2872EC9455BCA3B31"
        "B6EF6C552E7CBC384270A87383AB60CA99CD72889E0F64B00DD01E00E4F4192A"
        "6DBCB55ADF0C2523F177F964B4DA78AA5D022BCDEF265888C446730B19CED207"
        "3C7123FE53FF0893A486C01B4B9B1433F7A8A7689C1A4A7E99AF13B4A9248523"
        "B815BAD5D14BC94C7A05114540D9F75DCDA5BB468BF2D2FDE33D5D6634BDA360"
        "69A7CA3690BBEF1CC5BF22D41A9A9785EA962BE8C2933E07B53709C1D58D1E48"
        "6B472BEF3F8FA4722AC5B64AB49823A9BD1076C9DC7979E62EA3C230586E2A97"
        "D163CC2E000C9F54E1F43AAB8DBB1C54768DFA9E3553D94EE76107969E992325"
    )
    B_hex = (
        "F4D69379248D20EED58A337FB5E470B6C3ED3E3020DC88E51FED0DADA1FBAB41"
        "FD5A2E5502E2EC15373D069C309797747F08F1E7AD6453C42BF4858FFEE011AC"
        "1D09DF733B38C0D506B56D4EC8854D1DA15B69A40CB3CD6E12D90C6558C20CE2"
        "C4DB41E271008AE344FEE14BE3B33734D1D09EEEC40FE34DB81E462D608FBFBB"
        "E833EFDFACE5D7BA10DB46EAB4CFF490A99A8D65EAA4214746793286F29EE728"
        "9D7DD61B6DBD499088D80914A8E2ECD1257863C8F5821854605D1D723304DA25"
        "6F66C33CF4A87FE87A27E9CAC7B6A74CE6381587DDAB37FD3B8B70CE8B191B66"
        "F4ED27C8356CD02C6DC269C0651DB09EE07CE22064002DD624AFADAFF5393AC0"
        "422FABE39B1928B0B299B35311FDB46EE35C7E9FAC2467469A61705275B06D36"
        "FC588007F077B674126A56228C7B836271531293FBAE7FAA9F08E852F67C65EA"
        "2C598A9D7090BA64FE89A3364F87FE7B27BBED1862A01A42A348CD64AFEE58CC"
        "CA02B0764B813608C0A98DC9F815294D26746DF7DC28B79C6EABF08017406C06"
    )
    K_hex = (
        "39FDCEC9D0DC0BD723318C18F55951C3BB9B442FDE6452AA5BAC2B8F6A2B61BF"
        "406C79A849C324AA0B3DD7854FB5C56763E305889689E04C8E83A95E244410E7"
    )

    hash_algorithms = ["SHA-1", "SHA-256", "SHA-384", "SHA-512"]
    for hash_name in hash_algorithms:
        M = calculateM(hash_name, N_hex, g_hex, username, salt_hex, A_hex, B_hex, K_hex)
        print(f"{hash_name}: {M}")
