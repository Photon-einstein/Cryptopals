<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1447px" preserveAspectRatio="none" style="width:4326px;height:1447px;background:#FFFFFF;" version="1.1" viewBox="0 0 4326 1447" width="4326px" zoomAndPan="magnify"><defs/><g><!--cluster SrpParametersLoader--><g id="cluster_SrpParametersLoader"><path d="M2778.5,6.602 L2930.5,6.602 A3.75,3.75 0 0 1 2933,9.102 L2940,31.6699 L4254,31.6699 A2.5,2.5 0 0 1 4256.5,34.1699 L4256.5,220.102 A2.5,2.5 0 0 1 4254,222.602 L2778.5,222.602 A2.5,2.5 0 0 1 2776,220.102 L2776,9.102 A2.5,2.5 0 0 1 2778.5,6.602 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2776" x2="2940" y1="31.6699" y2="31.6699"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="151" x="2780" y="23.5679">SrpParametersLoader</text></g><!--cluster MyCryptoLibrary--><g id="cluster_MyCryptoLibrary"><path d="M2268.5,582.602 L2386.5,582.602 A3.75,3.75 0 0 1 2389,585.102 L2396,607.6699 L3943.5,607.6699 A2.5,2.5 0 0 1 3946,610.1699 L3946,1178.102 A2.5,2.5 0 0 1 3943.5,1180.602 L2268.5,1180.602 A2.5,2.5 0 0 1 2266,1178.102 L2266,585.102 A2.5,2.5 0 0 1 2268.5,582.602 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2266" x2="2396" y1="607.6699" y2="607.6699"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="117" x="2270" y="599.5679">MyCryptoLibrary</text></g><!--cluster EncryptionUtility--><g id="cluster_EncryptionUtility"><path d="M2824.5,284.602 L2943.5,284.602 A3.75,3.75 0 0 1 2946,287.102 L2953,309.6699 L4316.5,309.6699 A2.5,2.5 0 0 1 4319,312.1699 L4319,556.102 A2.5,2.5 0 0 1 4316.5,558.602 L2824.5,558.602 A2.5,2.5 0 0 1 2822,556.102 L2822,287.102 A2.5,2.5 0 0 1 2824.5,284.602 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2822" x2="2953" y1="309.6699" y2="309.6699"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="118" x="2826" y="301.5679">EncryptionUtility</text></g><!--cluster MessageExtractionFacility--><g id="cluster_MessageExtractionFacility"><path d="M2840,1204.602 L3021,1204.602 A3.75,3.75 0 0 1 3023.5,1207.102 L3030.5,1229.6699 L4314.5,1229.6699 A2.5,2.5 0 0 1 4317,1232.1699 L4317,1438.102 A2.5,2.5 0 0 1 4314.5,1440.602 L2840,1440.602 A2.5,2.5 0 0 1 2837.5,1438.102 L2837.5,1207.102 A2.5,2.5 0 0 1 2840,1204.602 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2837.5" x2="3030.5" y1="1229.6699" y2="1229.6699"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="180" x="2841.5" y="1221.5679">MessageExtractionFacility</text></g><!--class SrpParameters--><g id="elem_SrpParameters"><rect codeLine="193" fill="#F1F1F1" height="162.4075" id="SrpParameters" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="4052.5" y="44.602"/><ellipse cx="4092.7" cy="60.602" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4095.6688,66.2426 Q4095.0906,66.5395 4094.45,66.6801 Q4093.8094,66.8364 4093.1063,66.8364 Q4090.6063,66.8364 4089.2781,65.1957 Q4087.9656,63.5395 4087.9656,60.4145 Q4087.9656,57.2895 4089.2781,55.6332 Q4090.6063,53.977 4093.1063,53.977 Q4093.8094,53.977 4094.45,54.1332 Q4095.1063,54.2895 4095.6688,54.5864 L4095.6688,57.3051 Q4095.0438,56.727 4094.45,56.4614 Q4093.8563,56.1801 4093.2313,56.1801 Q4091.8875,56.1801 4091.2,57.2582 Q4090.5125,58.3207 4090.5125,60.4145 Q4090.5125,62.5082 4091.2,63.5864 Q4091.8875,64.6489 4093.2313,64.6489 Q4093.8563,64.6489 4094.45,64.3832 Q4095.0438,64.102 4095.6688,63.5239 L4095.6688,66.2426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="4112.3" y="66.034">SrpParameters</text><line style="stroke:#181818;stroke-width:0.5;" x1="4053.5" x2="4239.5" y1="76.602" y2="76.602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="4058.5" y="95.5679">+_groupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="4058.5" y="114.6358">+_sizeBits : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="4058.5" y="133.7038">+_nHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="4058.5" y="152.7717">+_g : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="4058.5" y="171.8396">+_groupName : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="4058.5" y="190.9075">+_hashName : std::string</text><line style="stroke:#181818;stroke-width:0.5;" x1="4053.5" x2="4239.5" y1="199.0095" y2="199.0095"/></g><!--class SrpParametersLoader--><g id="elem_SrpParametersLoader"><rect codeLine="202" fill="#F1F1F1" height="67.0679" id="SrpParametersLoader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="628" x="2792" y="78.102"/><ellipse cx="3028.75" cy="94.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3031.7188,99.7426 Q3031.1406,100.0395 3030.5,100.1801 Q3029.8594,100.3364 3029.1563,100.3364 Q3026.6563,100.3364 3025.3281,98.6957 Q3024.0156,97.0395 3024.0156,93.9145 Q3024.0156,90.7895 3025.3281,89.1332 Q3026.6563,87.477 3029.1563,87.477 Q3029.8594,87.477 3030.5,87.6332 Q3031.1563,87.7895 3031.7188,88.0864 L3031.7188,90.8051 Q3031.0938,90.227 3030.5,89.9614 Q3029.9063,89.6801 3029.2813,89.6801 Q3027.9375,89.6801 3027.25,90.7582 Q3026.5625,91.8207 3026.5625,93.9145 Q3026.5625,96.0082 3027.25,97.0864 Q3027.9375,98.1489 3029.2813,98.1489 Q3029.9063,98.1489 3030.5,97.8832 Q3031.0938,97.602 3031.7188,97.0239 L3031.7188,99.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="3049.25" y="99.534">SrpParametersLoader</text><line style="stroke:#181818;stroke-width:0.5;" x1="2793" x2="3419" y1="110.102" y2="110.102"/><line style="stroke:#181818;stroke-width:0.5;" x1="2793" x2="3419" y1="118.102" y2="118.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="616" x="2798" y="137.0679">+loadSrpParameters(filename : const std::string&amp;) : std::map&lt;unsigned int, SrpParameters&gt;</text></g><!--class SecureRemotePassword--><g id="elem_SecureRemotePassword"><rect codeLine="45" fill="#F1F1F1" height="543.7658" id="SecureRemotePassword" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1648" x="2282" y="620.602"/><ellipse cx="3021.25" cy="636.602" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3024.2188,642.2426 Q3023.6406,642.5395 3023,642.6801 Q3022.3594,642.8364 3021.6563,642.8364 Q3019.1563,642.8364 3017.8281,641.1957 Q3016.5156,639.5395 3016.5156,636.4145 Q3016.5156,633.2895 3017.8281,631.6332 Q3019.1563,629.977 3021.6563,629.977 Q3022.3594,629.977 3023,630.1332 Q3023.6563,630.2895 3024.2188,630.5864 L3024.2188,633.3051 Q3023.5938,632.727 3023,632.4614 Q3022.4063,632.1801 3021.7813,632.1801 Q3020.4375,632.1801 3019.75,633.2582 Q3019.0625,634.3207 3019.0625,636.4145 Q3019.0625,638.5082 3019.75,639.5864 Q3020.4375,640.6489 3021.7813,640.6489 Q3022.4063,640.6489 3023,640.3832 Q3023.5938,640.102 3024.2188,639.5239 L3024.2188,642.2426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="3041.75" y="642.034">SecureRemotePassword</text><line style="stroke:#181818;stroke-width:0.5;" x1="2283" x2="3929" y1="652.602" y2="652.602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="2288" y="671.5679">-_debugFlag : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="292" x="2288" y="690.6358">-_srpParametersFilename : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="575" x="2288" y="709.7038">-_srpParametersMap : std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="2288" y="728.7717">-_groupId : unsigned int = 0</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="232" x="2288" y="747.8396">-_minSizePrivateKey : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="485" x="2288" y="766.9075">-_hashMap : std::unordered_map&lt;std::string, EncryptionUtility::HashFn&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="557" x="2288" y="785.9754">-_kMap : const std::map&lt;unsigned int, MessageExtractionFacility::UniqueBIGNUM&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="2283" x2="3929" y1="794.0774" y2="794.0774"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="2288" y="813.0433">+SecureRemotePassword(debugFlag : const bool) {explicit}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="2288" y="832.1113">+~SecureRemotePassword()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="697" x="2288" y="851.1792">+calculateKMultiplierParameters() : std::map&lt;unsigned int, MessageExtractionFacility::UniqueBIGNUM&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="386" x="2288" y="870.2471">+getSrpParametersFilenameLocation() : const std::string&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="309" x="2288" y="889.315">+getMinSizePrivateKey() : const unsigned int&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="596" x="2288" y="908.3829">+getKMap() : const std::map&lt;unsigned int, MessageExtractionFacility::UniqueBIGNUM&gt;&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="703" x="2288" y="927.4508">+getSrpParametersMap() : const std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;&amp; {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="619" x="2288" y="946.5188">+generatePrivateKey(NHex : const std::string&amp;, minSizeBits : const unsigned int) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1284" x="2288" y="965.5867">+calculatePublicKey(privateKeyHex : const std::string&amp;, NHex : const std::string&amp;, gHex : const std::string&amp;, isServer : bool, k : const BIGNUM* = nullptr, vHex : const std::string = "") : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="572" x="2288" y="984.6546">+validatePublicKey(publicKeyHex : const std::string&amp;, NHex : const std::string&amp;) : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="937" x="2288" y="1003.7225">+calculateK(NHex : const std::string&amp;, gHex : const std::string&amp;, hashName : const std::string&amp;) : MessageExtractionFacility::UniqueBIGNUM</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="2288" y="1022.7904">+calculateV(xHex : const std::string&amp;, NHex : const std::string&amp;, g : unsigned int) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="932" x="2288" y="1041.8583">+calculateU(hashName : const std::string&amp;, AHex : const std::string&amp;, BHex : const std::string&amp;, NHex : const std::string&amp;) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1008" x="2288" y="1060.9263">+calculateX(hashName : const std::string&amp;, username : const std::string&amp;, password : const std::string&amp;, saltHex : const std::string&amp;) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1346" x="2288" y="1079.9942">+calculateSClient(BHex : const std::string&amp;, kHex : const std::string&amp;, g : unsigned int, xHex : const std::string&amp;, aHex : const std::string&amp;, uHex : const std::string&amp;, NHex : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1065" x="2288" y="1099.0621">+calculateSServer(AHex : const std::string&amp;, vHex : const std::string&amp;, uHex : const std::string&amp;, bHex : const std::string&amp;, NHex : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="502" x="2288" y="1118.13">+calculateK(hash : const std::string&amp;, SHex : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1636" x="2288" y="1137.1979">+calculateM(hashName : const std::string&amp;, NHex : const std::string&amp;, gHex : const std::string&amp;, username : const std::string&amp;, saltHex : const std::string&amp;, AHex : const std::string&amp;, BHex : const std::string&amp;, KHex : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="945" x="2288" y="1156.2658">+calculateM2(hashName : const std::string&amp;, AHex : const std::string&amp;, MHex : const std::string&amp;, KHex : const std::string&amp;) : const std::string</text></g><!--class HashFn--><g id="elem_HashFn"><rect codeLine="83" fill="#F1F1F1" height="80.4799" id="HashFn" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="313" x="3990" y="392.602"/><ellipse cx="4117.25" cy="415.308" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4120.2188,420.9486 Q4119.6406,421.2455 4119,421.3861 Q4118.3594,421.5424 4117.6563,421.5424 Q4115.1563,421.5424 4113.8281,419.9017 Q4112.5156,418.2455 4112.5156,415.1205 Q4112.5156,411.9955 4113.8281,410.3392 Q4115.1563,408.683 4117.6563,408.683 Q4118.3594,408.683 4119,408.8392 Q4119.6563,408.9955 4120.2188,409.2924 L4120.2188,412.0111 Q4119.5938,411.433 4119,411.1674 Q4118.4063,410.8861 4117.7813,410.8861 Q4116.4375,410.8861 4115.75,411.9642 Q4115.0625,413.0267 4115.0625,415.1205 Q4115.0625,417.2142 4115.75,418.2924 Q4116.4375,419.3549 4117.7813,419.3549 Q4118.4063,419.3549 4119,419.0892 Q4119.5938,418.808 4120.2188,418.2299 L4120.2188,420.9486 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="52" x="4136.75" y="410.4301">&#171;typedef&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="4137.75" y="428.912">HashFn</text><line style="stroke:#181818;stroke-width:0.5;" x1="3991" x2="4302" y1="438.014" y2="438.014"/><line style="stroke:#181818;stroke-width:0.5;" x1="3991" x2="4302" y1="446.014" y2="446.014"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="3996" y="464.9799">std::function&lt;std::string(const std::string &amp;)&gt;</text></g><!--class EncryptionUtility--><g id="elem_EncryptionUtility"><rect codeLine="87" fill="#F1F1F1" height="219.6113" id="EncryptionUtility" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="536" x="2838" y="322.602"/><ellipse cx="3046.25" cy="338.602" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3049.2188,344.2426 Q3048.6406,344.5395 3048,344.6801 Q3047.3594,344.8364 3046.6563,344.8364 Q3044.1563,344.8364 3042.8281,343.1957 Q3041.5156,341.5395 3041.5156,338.4145 Q3041.5156,335.2895 3042.8281,333.6332 Q3044.1563,331.977 3046.6563,331.977 Q3047.3594,331.977 3048,332.1332 Q3048.6563,332.2895 3049.2188,332.5864 L3049.2188,335.3051 Q3048.5938,334.727 3048,334.4614 Q3047.4063,334.1801 3046.7813,334.1801 Q3045.4375,334.1801 3044.75,335.2582 Q3044.0625,336.3207 3044.0625,338.4145 Q3044.0625,340.5082 3044.75,341.5864 Q3045.4375,342.6489 3046.7813,342.6489 Q3047.4063,342.6489 3048,342.3832 Q3048.5938,342.102 3049.2188,341.5239 L3049.2188,344.2426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="3066.75" y="344.034">EncryptionUtility</text><line style="stroke:#181818;stroke-width:0.5;" x1="2839" x2="3373" y1="354.602" y2="354.602"/><line style="stroke:#181818;stroke-width:0.5;" x1="2839" x2="3373" y1="362.602" y2="362.602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="499" x="2844" y="381.5679">+generateCryptographicNonce(length : const std::size_t) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="2844" y="400.6358">+sha1(input : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="2844" y="419.7038">+sha256(input : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="2844" y="438.7717">+sha384(input : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="2844" y="457.8396">+sha512(input : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="434" x="2844" y="476.9075">+getHashMap() : const std::unordered_map&lt;std::string, HashFn&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="2844" y="495.9754">+getMinSaltSizes() : const std::map&lt;std::string, unsigned int&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="484" x="2844" y="515.0433">+generatePassword(passwordLength : std::size_t = 16) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="524" x="2844" y="534.1113">+padLeft(input : const std::vector&lt;uint8_t&gt;&amp;, size : size_t) : std::vector&lt;uint8_t&gt;</text></g><!--class UniqueBIGNUM--><g id="elem_UniqueBIGNUM"><rect codeLine="105" fill="#F1F1F1" height="80.4799" id="UniqueBIGNUM" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="309" x="3992" y="1268.602"/><ellipse cx="4088.75" cy="1291.308" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4091.7188,1296.9486 Q4091.1406,1297.2455 4090.5,1297.3861 Q4089.8594,1297.5424 4089.1563,1297.5424 Q4086.6563,1297.5424 4085.3281,1295.9017 Q4084.0156,1294.2455 4084.0156,1291.1205 Q4084.0156,1287.9955 4085.3281,1286.3392 Q4086.6563,1284.683 4089.1563,1284.683 Q4089.8594,1284.683 4090.5,1284.8392 Q4091.1563,1284.9955 4091.7188,1285.2924 L4091.7188,1288.0111 Q4091.0938,1287.433 4090.5,1287.1674 Q4089.9063,1286.8861 4089.2813,1286.8861 Q4087.9375,1286.8861 4087.25,1287.9642 Q4086.5625,1289.0267 4086.5625,1291.1205 Q4086.5625,1293.2142 4087.25,1294.2924 Q4087.9375,1295.3549 4089.2813,1295.3549 Q4089.9063,1295.3549 4090.5,1295.0892 Q4091.0938,1294.808 4091.7188,1294.2299 L4091.7188,1296.9486 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="52" x="4136.75" y="1286.4301">&#171;typedef&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="4109.25" y="1304.912">UniqueBIGNUM</text><line style="stroke:#181818;stroke-width:0.5;" x1="3993" x2="4300" y1="1314.014" y2="1314.014"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="3998" y="1332.9799">std::unique_ptr&lt;BIGNUM, BIGNUM_deleter&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="3993" x2="4300" y1="1341.0819" y2="1341.0819"/></g><!--class MessageExtractionFacility--><g id="elem_MessageExtractionFacility"><rect codeLine="109" fill="#F1F1F1" height="181.4754" id="MessageExtractionFacility" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="505" x="2853.5" y="1243.102"/><ellipse cx="3015.25" cy="1259.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3018.2188,1264.7426 Q3017.6406,1265.0395 3017,1265.1801 Q3016.3594,1265.3364 3015.6563,1265.3364 Q3013.1563,1265.3364 3011.8281,1263.6957 Q3010.5156,1262.0395 3010.5156,1258.9145 Q3010.5156,1255.7895 3011.8281,1254.1332 Q3013.1563,1252.477 3015.6563,1252.477 Q3016.3594,1252.477 3017,1252.6332 Q3017.6563,1252.7895 3018.2188,1253.0864 L3018.2188,1255.8051 Q3017.5938,1255.227 3017,1254.9614 Q3016.4063,1254.6801 3015.7813,1254.6801 Q3014.4375,1254.6801 3013.75,1255.7582 Q3013.0625,1256.8207 3013.0625,1258.9145 Q3013.0625,1261.0082 3013.75,1262.0864 Q3014.4375,1263.1489 3015.7813,1263.1489 Q3016.4063,1263.1489 3017,1262.8832 Q3017.5938,1262.602 3018.2188,1262.0239 L3018.2188,1264.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="3035.75" y="1264.534">MessageExtractionFacility</text><line style="stroke:#181818;stroke-width:0.5;" x1="2854.5" x2="3357.5" y1="1275.102" y2="1275.102"/><line style="stroke:#181818;stroke-width:0.5;" x1="2854.5" x2="3357.5" y1="1283.102" y2="1283.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="462" x="2859.5" y="1302.0679">+hexToBytes(hexStr : const std::string&amp;) : std::vector&lt;unsigned char&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="452" x="2859.5" y="1321.1358">+toHexString(data : const std::vector&lt;unsigned char&gt;&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="2859.5" y="1340.2038">+hexToPlaintext(hexString : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="493" x="2859.5" y="1359.2717">+hexToUniqueBIGNUM(hexNumber : const std::string&amp;) : UniqueBIGNUM</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="2859.5" y="1378.3396">+BIGNUMToHex(bn : BIGNUM*) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="2859.5" y="1397.4075">+BIGNUMToDec(bn : BIGNUM*) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="418" x="2859.5" y="1416.4754">+uintToHex(value : unsigned int, width : size_t = 2) : std::string</text></g><!--class Client--><g id="elem_Client"><rect codeLine="7" fill="#F1F1F1" height="562.8338" id="Client" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="647" x="7" y="117.102"/><ellipse cx="306.75" cy="133.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M309.7188,138.7426 Q309.1406,139.0395 308.5,139.1801 Q307.8594,139.3364 307.1563,139.3364 Q304.6563,139.3364 303.3281,137.6957 Q302.0156,136.0395 302.0156,132.9145 Q302.0156,129.7895 303.3281,128.1332 Q304.6563,126.477 307.1563,126.477 Q307.8594,126.477 308.5,126.6332 Q309.1563,126.7895 309.7188,127.0864 L309.7188,129.8051 Q309.0938,129.227 308.5,128.9614 Q307.9063,128.6801 307.2813,128.6801 Q305.9375,128.6801 305.25,129.7582 Q304.5625,130.8207 304.5625,132.9145 Q304.5625,135.0082 305.25,136.0864 Q305.9375,137.1489 307.2813,137.1489 Q307.9063,137.1489 308.5,136.8832 Q309.0938,136.602 309.7188,136.0239 L309.7188,138.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="327.25" y="138.534">Client</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="653" y1="149.102" y2="149.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="13" y="168.0679">-_portServerProduction : int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="13" y="187.1358">-_portServerTest : int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="13" y="206.2038">-_clientId : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="13" y="225.2717">-_debugFlag : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="416" x="13" y="244.3396">-_minSaltSizesMap : const std::map&lt;std::string, unsigned int&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="13" y="263.4075">-_srpParametersFilename : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="575" x="13" y="282.4754">-_srpParametersMap : std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="13" y="301.5433">-_sessionData : std::unique_ptr&lt;SessionData&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="13" y="320.6113">-_passwordSize : const unsigned int = 20</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="373" x="13" y="339.6792">-_serverConfirmationMessage : const std::string = "Ack"</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="134" x="13" y="358.7471">-_isServerFlag : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="653" y1="366.8491" y2="366.8491"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="13" y="385.815">+Client(clientId : const std::string&amp;, debugFlag : const bool) {explicit}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="13" y="404.8829">+~Client()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="390" x="13" y="423.9508">+setProductionPort(portServerProduction : const int) : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="13" y="443.0188">+setTestPort(portServerTest : const int) : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="13" y="462.0867">+getClientId() : const std::string&amp; {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="13" y="481.1546">+getProductionPort() : const int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="13" y="500.2225">+getTestPort() : const int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="436" x="13" y="519.2904">+getSrpParametersFilenameLocation() : const std::string&amp; {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="530" x="13" y="538.3583">+registration(portServerNumber : const int, groupId : const int = 1) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="13" y="557.4263">+authentication(portServerNumber : const int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="162" x="13" y="576.4942">+getIsServerFlag() : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="594" x="13" y="595.5621">-registrationInit(portServerNumber : const int, groupId : const unsigned int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="635" x="13" y="614.63">-registrationComplete(portServerNumber : const int, groupId : const unsigned int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="412" x="13" y="633.6979">-authenticationInit(portServerNumber : const int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="453" x="13" y="652.7658">-authenticationComplete(portServerNumber : const int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="413" x="13" y="671.8338">-printServerResponse(response : const cpr::Response&amp;) : void</text></g><!--class SessionData--><g id="elem_SessionData"><rect codeLine="167" fill="#F1F1F1" height="391.2225" id="SessionData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="861" x="1361" y="594.102"/><ellipse cx="1746.25" cy="610.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1749.2188,615.7426 Q1748.6406,616.0395 1748,616.1801 Q1747.3594,616.3364 1746.6563,616.3364 Q1744.1563,616.3364 1742.8281,614.6957 Q1741.5156,613.0395 1741.5156,609.9145 Q1741.5156,606.7895 1742.8281,605.1332 Q1744.1563,603.477 1746.6563,603.477 Q1747.3594,603.477 1748,603.6332 Q1748.6563,603.7895 1749.2188,604.0864 L1749.2188,606.8051 Q1748.5938,606.227 1748,605.9614 Q1747.4063,605.6801 1746.7813,605.6801 Q1745.4375,605.6801 1744.75,606.7582 Q1744.0625,607.8207 1744.0625,609.9145 Q1744.0625,612.0082 1744.75,613.0864 Q1745.4375,614.1489 1746.7813,614.1489 Q1747.4063,614.1489 1748,613.8832 Q1748.5938,613.602 1749.2188,613.0239 L1749.2188,615.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1766.75" y="615.534">SessionData</text><line style="stroke:#181818;stroke-width:0.5;" x1="1362" x2="2221" y1="626.102" y2="626.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="582" x="1367" y="645.0679">-_secureRemotePassword : std::unique_ptr&lt;MyCryptoLibrary::SecureRemotePassword&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="1367" y="664.1358">-_groupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1367" y="683.2038">-_salt : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1367" y="702.2717">-_hash : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="1367" y="721.3396">-_password : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1367" y="740.4075">-_vHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="1367" y="759.4754">-_registrationComplete : bool = false</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="1367" y="778.5433">-_privateKeyHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="1367" y="797.6113">-_publicKeyHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="1367" y="816.6792">-_peerPublicKeyHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1367" y="835.7471">-_uHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1367" y="854.815">-_xHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1367" y="873.8829">-_SHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1367" y="892.9508">-_KHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="1367" y="912.0188">-_MHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1367" y="931.0867">-_M2Hex : std::string</text><line style="stroke:#181818;stroke-width:0.5;" x1="1362" x2="2221" y1="939.1887" y2="939.1887"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="849" x="1367" y="958.1546">+SessionData(groupId : const unsigned int, salt : const std::string&amp;, hash : const std::string&amp;, debugFlag : const bool) {explicit}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1367" y="977.2225">+~SessionData()</text></g><!--class Server--><g id="elem_Server"><rect codeLine="123" fill="#F1F1F1" height="677.2413" id="Server" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="587" x="714" y="60.102"/><ellipse cx="981.75" cy="76.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M984.7188,81.7426 Q984.1406,82.0395 983.5,82.1801 Q982.8594,82.3364 982.1563,82.3364 Q979.6563,82.3364 978.3281,80.6957 Q977.0156,79.0395 977.0156,75.9145 Q977.0156,72.7895 978.3281,71.1332 Q979.6563,69.477 982.1563,69.477 Q982.8594,69.477 983.5,69.6332 Q984.1563,69.7895 984.7188,70.0864 L984.7188,72.8051 Q984.0938,72.227 983.5,71.9614 Q982.9063,71.6801 982.2813,71.6801 Q980.9375,71.6801 980.25,72.7582 Q979.5625,73.8207 979.5625,75.9145 Q979.5625,78.0082 980.25,79.0864 Q980.9375,80.1489 982.2813,80.1489 Q982.9063,80.1489 983.5,79.8832 Q984.0938,79.602 984.7188,79.0239 L984.7188,81.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="1002.25" y="81.534">Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="715" x2="1300" y1="92.102" y2="92.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="720" y="111.0679">-_app : crow::SimpleApp</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="396" x="720" y="130.1358">-_secureRemotePasswordMapMutex : std::mutex {mutable}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="720" y="149.2038">-_secureRemotePasswordMap : std::map&lt;std::string, std::unique_ptr&lt;SessionData&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="720" y="168.2717">-_portProduction : const int = 18080</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="720" y="187.3396">-_portTest : const int = 18081</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="720" y="206.4075">-_serverThread : std::thread</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="720" y="225.4754">-_debugFlag : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="720" y="244.5433">-_srpParametersFilename : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="575" x="720" y="263.6113">-_srpParametersMap : std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="720" y="282.6792">-_defaultGroupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="720" y="301.7471">-_minGroupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="720" y="320.815">-_maxGroupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="416" x="720" y="339.8829">-_minSaltSizesMap : const std::map&lt;std::string, unsigned int&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="525" x="720" y="358.9508">-_hashMap : const std::unordered_map&lt;std::string, EncryptionUtility::HashFn&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="134" x="720" y="378.0188">-_isServerFlag : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="715" x2="1300" y1="386.1207" y2="386.1207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="720" y="405.0867">+Server(debugFlag : const bool, defaultGroupId : const unsigned int = 3) {explicit}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="720" y="424.1546">+~Server()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="720" y="443.2225">+runServer() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="720" y="462.2904">+runServerTest() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="280" x="720" y="481.3583">+clearSecureRemotePasswordMap() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="720" y="500.4263">+getProductionPort() : const int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="720" y="519.4942">+getTestPort() : const int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="436" x="720" y="538.5621">+getSrpParametersFilenameLocation() : const std::string&amp; {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="331" x="720" y="557.63">+getDefaultGroupId() : const unsigned int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="162" x="720" y="576.6979">+getIsServerFlag() : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="720" y="595.7658">-setupRoutes() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="720" y="614.8338">-rootEndpoint() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="720" y="633.9017">-handleRegisterInit() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="720" y="652.9696">-handleRegisterComplete() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="720" y="672.0375">-handleAuthenticationInit() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="720" y="691.1054">-handleAuthenticationComplete() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="481" x="720" y="710.1733">-vValidation(clientId : const std::string&amp;, vHex : const std::string&amp;) : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="720" y="729.2413">-registeredUsersEndpoint() : void</text></g><g id="elem_ServerEndpointsNote"><path d="M1530.5,340.602 L1530.5,394.602 L1301.11,398.602 L1530.5,402.602 L1530.5,456.8381 A0,0 0 0 0 1530.5,456.8381 L2052.5,456.8381 A0,0 0 0 0 2052.5,456.8381 L2052.5,350.602 L2042.5,340.602 L1530.5,340.602 A0,0 0 0 0 1530.5,340.602 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M2042.5,340.602 L2042.5,350.602 L2052.5,350.602 L2042.5,340.602 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="139" x="1536.5" y="359.499">Exposes API Endpoints:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1536.5" y="377.205">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="166" x="1543.5" y="377.205">POST /handleRegisterInit</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="222" x="1712.5" y="377.205">(First part of the registration process)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1536.5" y="394.911">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="205" x="1543.5" y="394.911">POST /handleRegisterComplete</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="221" x="1751.5" y="394.911">(Last part of the registration process)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1536.5" y="412.617">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="213" x="1543.5" y="412.617">POST /handleAuthenticationInit</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="240" x="1759.5" y="412.617">(First part of the authentication process)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1536.5" y="430.3231">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="252" x="1543.5" y="430.3231">POST /handleAuthenticationComplete</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="239" x="1798.5" y="430.3231">(Last part of the authentication process)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1536.5" y="448.0291">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="195" x="1543.5" y="448.0291">GET /registeredUsersEndpoint</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="193" x="1741.5" y="448.0291">(Returns all the registered users)</text></g><!--link Client to SessionData--><g id="link_Client_SessionData"><path codeLine="38" d="M331,680.302 C331,776.872 331,861.102 331,861.102 C331,861.102 923.93,861.102 1354.71,861.102 " fill="none" id="Client-to-SessionData" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1360.71,861.102,1351.71,857.102,1355.71,861.102,1351.71,865.102,1360.71,861.102" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="703.45" y="875.999">contains</text></g><!--link Client to SrpParameters--><g id="link_Client_SrpParameters"><path codeLine="39" d="M331,117.072 C331,78.802 331,52.352 331,52.352 C331,52.352 3458.63,52.352 4046.18,52.352 " fill="none" id="Client-to-SrpParameters" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4052.18,52.352,4043.18,48.352,4047.18,52.352,4043.18,56.352,4052.18,52.352" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="2107.23" y="67.249">contains</text></g><!--link Client to Server--><g id="link_Client_Server"><path codeLine="41" d="M654.13,398.602 C674.1,398.602 688.14,398.602 707.98,398.602 " fill="none" id="Client-to-Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="713.98,398.602,704.98,394.602,708.98,398.602,704.98,402.602,713.98,398.602" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="131" x="552.05" y="413.499">&#171;uses HTTP requests&#187;</text></g><!--link SecureRemotePassword to SrpParameters--><g id="link_SecureRemotePassword_SrpParameters"><path codeLine="76" d="M3590,620.462 C3590,421.442 3590,186.102 3590,186.102 C3590,186.102 3887.73,186.102 4046.41,186.102 " fill="none" id="SecureRemotePassword-to-SrpParameters" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4052.41,186.102,4043.41,182.102,4047.41,186.102,4043.41,190.102,4052.41,186.102" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="3552.03" y="200.999">contains</text></g><!--link SecureRemotePassword to HashFn--><g id="link_SecureRemotePassword_HashFn"><path codeLine="77" d="M3760,620.552 C3760,527.282 3760,445.932 3760,445.932 C3760,445.932 3876.72,445.932 3983.85,445.932 " fill="none" id="SecureRemotePassword-to-HashFn" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="3989.85,445.932,3980.85,441.932,3984.85,445.932,3980.85,449.932,3989.85,445.932" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3759.62" y="460.829">uses</text></g><!--link SecureRemotePassword to UniqueBIGNUM--><g id="link_SecureRemotePassword_UniqueBIGNUM"><path codeLine="78" d="M3645,1164.812 C3645,1237.012 3645,1295.272 3645,1295.272 C3645,1295.272 3838.59,1295.272 3985.94,1295.272 " fill="none" id="SecureRemotePassword-to-UniqueBIGNUM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="3991.94,1295.272,3982.94,1291.272,3986.94,1295.272,3982.94,1299.272,3991.94,1295.272" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3725.24" y="1310.169">uses</text></g><!--link EncryptionUtility to HashFn--><g id="link_EncryptionUtility_HashFn"><path codeLine="99" d="M3374.29,419.272 C3569.54,419.272 3821.19,419.272 3983.9,419.272 " fill="none" id="EncryptionUtility-to-HashFn" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="3989.9,419.272,3980.9,415.272,3984.9,419.272,3980.9,423.272,3989.9,419.272" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3654.1" y="434.169">uses</text></g><!--link MessageExtractionFacility to UniqueBIGNUM--><g id="link_MessageExtractionFacility_UniqueBIGNUM"><path codeLine="119" d="M3358.54,1321.932 C3556.28,1321.932 3818.95,1321.932 3985.93,1321.932 " fill="none" id="MessageExtractionFacility-to-UniqueBIGNUM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="3991.93,1321.932,3982.93,1317.932,3986.93,1321.932,3982.93,1325.932,3991.93,1321.932" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3647.24" y="1336.829">uses</text></g><!--link Server to SessionData--><g id="link_Server_SessionData"><path codeLine="160" d="M1301.11,665.602 C1320.78,665.602 1334.8,665.602 1354.96,665.602 " fill="none" id="Server-to-SessionData" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1360.96,665.602,1351.96,661.602,1355.96,665.602,1351.96,669.602,1360.96,665.602" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="1279.03" y="680.499">contains</text></g><!--link Server to SrpParameters--><g id="link_Server_SrpParameters"><path codeLine="161" d="M1301.05,165.602 C1981.51,165.602 3634.02,165.602 4046.46,165.602 " fill="none" id="Server-to-SrpParameters" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4052.46,165.602,4043.46,161.602,4047.46,165.602,4043.46,169.602,4052.46,165.602" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="2624.75" y="180.499">contains</text></g><!--link Server to HashFn--><g id="link_Server_HashFn"><path codeLine="162" d="M1301.34,264.602 C2059.37,264.602 4022,264.602 4022,264.602 C4022,264.602 4022,336.662 4022,386.362 " fill="none" id="Server-to-HashFn" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4022,392.362,4026,383.362,4022,387.362,4018,383.362,4022,392.362" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="2697.55" y="279.499">uses</text></g><!--link SessionData to SecureRemotePassword--><g id="link_SessionData_SecureRemotePassword"><path codeLine="189" d="M2222.37,802.852 C2241.93,802.852 2255.79,802.852 2275.88,802.852 " fill="none" id="SessionData-to-SecureRemotePassword" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="2281.88,802.852,2272.88,798.852,2276.88,802.852,2272.88,806.852,2281.88,802.852" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="2200.12" y="817.749">contains</text></g><!--link SrpParametersLoader to SrpParameters--><g id="link_SrpParametersLoader_SrpParameters"><path codeLine="206" d="M3420.3,111.602 C3637.17,111.602 3904.97,111.602 4046.38,111.602 " fill="none" id="SrpParametersLoader-to-SrpParameters" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4052.38,111.602,4043.38,107.602,4047.38,111.602,4043.38,115.602,4052.38,111.602" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3708.34" y="126.499">uses</text></g><!--SRC=[pHfTJ-CuyBs_mk81fMpXWBrTeOgj12mi2CfL55RtS19o4zDQ12VdEDroYFljDqwSn4wS3xgiTFkoRJrVda_F33vv44W4YDFvGY2FSk8A6h1UBtgaBCGSFo7Nnr5q90IdirYG2pTWK_eFGRiQY4yP4SyXGG4NYw3NIr3GYKy94-YbX-3VDheFuNHA-9Bm2G-yE664XeWoKOMu9P4mpzo4seK7lu88S1e9RpYCG2msps0yCeldPpwUvq2p8F2pqoVAfjWNKlfeZ4EJq1CE3pMA0nIpYCuPyQGCeun4nCE9l34HX4Tdr2SCFZT9P22aJ7DsEeS1ckgGLm7s21yEZHyBAKWKWUw-Oe4pUZ6ZVyVaFXJyS5gSvXWXsED7mBt4SfcuEd_q1Utl5lIb2Ku2za3v4vPc6WDDFBVU530tZjp7ZGoPHga5bHca0T1B982C-zfBW3uept2QJBevG7Phzj4BMOK-TQbuLUJ-LVJwwdj4HE5X4_0ffyRrKgfm_JvyMGRKAmX81ooXAf-iGveJSQ8kvFIjLq8loM-l1K99pBvElWgTozG2DxLvwLNW9gRi9XidSmedAKQXWkluQKQupds0vZo8Gys8gJVjzQin-07XM2n0GzHj9sp5XyjTQFwLtCNqiDGBTV4l61Lll88U6NrRBj7fdmHFeG-gVcyUfgvQRz61HYT9hNH2y165SKEY48w9mzM77DuD8MDbnvjPT1IcWV1N9M5dPuIcHX832W9J5XaGrOouO_ocusM8szkIj1GKJZSE3sD8bkZyzdO2DeCC6ObeDDhezMH4H25s2He_d_3dK0HNTCOnVuPobTmvBM5JuiQSt92dG929og6ge5bAJgwmjrOBqtr_MUbGX0jFB5M0NHrALake5XDEbrYGI_9SXhV9lC3HGXCrPg0lmebtNoclfyoLQWSFk1FKf-9vE3m7v3CsiX9-j1PiKmsgI9sk832Jd7g6NKNwBYcFnnVVhk_6er8vIZEBpT9Enmgagf2LH5-3SB7lnhxKvZZs1GKIK8zo6oN9xDskLd1Tko1OIOtBRg6XwpBNuL-28SiSrx_lPfSBT-BO8ORC6fdnOWJAWAwFwtEogddHg9WwfYAghGEDQK7peKay0nUK3CESTptd1g7czKVPMqxbjW5wp05J0sn1rc2nxyExSu2MDOJa2t6ZmzMMsAUUURFiqneNipyDoe7ehASOcUUkQv9vmhcZ0pSAzzrPhMVGKgRkToiv6kSxf_620tHKp_ruJLkzJS8_soI4kizP_N7M4DKSHz0dlf-mKzMVDAZciRiv1wZ1BN3zKRocOJhVCiqLJeDlBDUIRlQB1RzCVAc6m_GzE8pRl7MzBDJYuqrEl6u8NxwBElP_8h-CrnIk9MIJzgJK2-nOd_zlRaqwKwsyYNVI9x5C0D36T2TKMtrsZEAZoEhTK4K4inzIyXmUoccVHnv68wqRIdJx4BE4e_xQTwgwt-oFbDerwZRcrQTMgeCvn-62kjS1Sua33zgvA4SmFBJkxRLF8nejy9u3OynOTF5g4t7_q-TrKJyU_BukwgUz_RLGuLLyddPdvSTmGvUcMh9g2v3DKMqFwvOnQkdXd3LAMKM-ocofML7EapwtcJB4WFiWRCfPmbGxu8Sno71mBqOoDwQ3qC99R72wXrPzKmQQ6PyoXMY3XReWD4FAYCY6mD8cl2dmGBt1OGGXXphS4b1D8XIAMv3LRN3yBC2Qy74gUBDdPKhA3EikCDSjAuBpX8eCV2-VxfHDOM0tk6qYtCI7H2h8IYW1PGPvc_SdP7HLIqgbuLUPaWwkaKf_k9MtT6RIzgeLgcUUONmbRaSCwO4f1sYAOb9v0VwWNXeZMNZissWfNwZt0kd2rehmckrmLF-Nxt1mc8nXUF03kcCgnub7OLZi3Qhr2FBD6DP6gtosaNnvWV_mp2UlBQZwHCH8AqrBZv6-JhBF-sL2ETWzsDKXo-Dz1RDdRaLk5vnWBvDB9D-whP_-7xiZo2qOXa_Vh3D0RLFM0e1NhHH-TjTMp1AxrQhwYU9RLbEgYR6RKkwaIkgphj8-sfPKYdAsfE8notunzqZvWNJ8yg7h4yodzc1ngWkf_-r-2QXyDLHPCqQiedNQ_y02BmvlWbYe5qgk5LZT184uPLuOK2RAPmlCF1yKAvSxX2ShbqQ8VA5YXJggBd0wmDNHN7vFnsDInIsBqsNRJCpOOibekeFa5bMr0b6X2a33naQ7U4jRfE6rDJuz1fwEDavNOI3NEKUJ2vG96mt_OjjeQslon_GM_LOruDOMSiue1qN0doe853mWKBQnluFbLk32rVhrX3ARI69NU3rQLM-mYsQkx3eJR1InaUQtKo1PumgIsWt44cSHmhwltLU29WE8gB-1SFPGoAro3GOhB6mzpLyOXLUzD3q7B7_gK6g8eUPPyFBqFs-iM79QOdb3gK9aFmbBefcdAWmj9xRrSPR9lg07x4SaPr4QxjkaCAVaDWW2YwPMgBZsP5LxCgqzkQmz6TUVx5UFyhgSkudJj4fFnruDO_kV_cCJNP9-cY8B3qwcBrt6DFhgkkWPBGcqj90sigdUnJMvjuA8YjrJ7GYpsoPZqO2Pi5SZlHfqRUXNqwfOBfbheI3amqy6ZFFGy9pUx7TyE1iDj4s6IedJ-gN_0000]--></g></svg>