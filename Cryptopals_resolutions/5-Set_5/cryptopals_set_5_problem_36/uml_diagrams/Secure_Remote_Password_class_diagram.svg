<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1447px" preserveAspectRatio="none" style="width:4387px;height:1447px;background:#FFFFFF;" version="1.1" viewBox="0 0 4387 1447" width="4387px" zoomAndPan="magnify"><defs/><g><!--cluster SrpParametersLoader--><g id="cluster_SrpParametersLoader"><path d="M2839.5,6.602 L2991.5,6.602 A3.75,3.75 0 0 1 2994,9.102 L3001,31.6699 L4315,31.6699 A2.5,2.5 0 0 1 4317.5,34.1699 L4317.5,220.102 A2.5,2.5 0 0 1 4315,222.602 L2839.5,222.602 A2.5,2.5 0 0 1 2837,220.102 L2837,9.102 A2.5,2.5 0 0 1 2839.5,6.602 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2837" x2="3001" y1="31.6699" y2="31.6699"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="151" x="2841" y="23.5679">SrpParametersLoader</text></g><!--cluster MyCryptoLibrary--><g id="cluster_MyCryptoLibrary"><path d="M2329.5,582.602 L2447.5,582.602 A3.75,3.75 0 0 1 2450,585.102 L2457,607.6699 L4004.5,607.6699 A2.5,2.5 0 0 1 4007,610.1699 L4007,1178.102 A2.5,2.5 0 0 1 4004.5,1180.602 L2329.5,1180.602 A2.5,2.5 0 0 1 2327,1178.102 L2327,585.102 A2.5,2.5 0 0 1 2329.5,582.602 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2327" x2="2457" y1="607.6699" y2="607.6699"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="117" x="2331" y="599.5679">MyCryptoLibrary</text></g><!--cluster EncryptionUtility--><g id="cluster_EncryptionUtility"><path d="M2885.5,284.602 L3004.5,284.602 A3.75,3.75 0 0 1 3007,287.102 L3014,309.6699 L4377.5,309.6699 A2.5,2.5 0 0 1 4380,312.1699 L4380,556.102 A2.5,2.5 0 0 1 4377.5,558.602 L2885.5,558.602 A2.5,2.5 0 0 1 2883,556.102 L2883,287.102 A2.5,2.5 0 0 1 2885.5,284.602 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2883" x2="3014" y1="309.6699" y2="309.6699"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="118" x="2887" y="301.5679">EncryptionUtility</text></g><!--cluster MessageExtractionFacility--><g id="cluster_MessageExtractionFacility"><path d="M2901,1204.602 L3082,1204.602 A3.75,3.75 0 0 1 3084.5,1207.102 L3091.5,1229.6699 L4375.5,1229.6699 A2.5,2.5 0 0 1 4378,1232.1699 L4378,1438.102 A2.5,2.5 0 0 1 4375.5,1440.602 L2901,1440.602 A2.5,2.5 0 0 1 2898.5,1438.102 L2898.5,1207.102 A2.5,2.5 0 0 1 2901,1204.602 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2898.5" x2="3091.5" y1="1229.6699" y2="1229.6699"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="180" x="2902.5" y="1221.5679">MessageExtractionFacility</text></g><!--class SrpParameters--><g id="elem_SrpParameters"><rect codeLine="194" fill="#F1F1F1" height="162.4075" id="SrpParameters" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="4113.5" y="44.602"/><ellipse cx="4153.7" cy="60.602" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4156.6688,66.2426 Q4156.0906,66.5395 4155.45,66.6801 Q4154.8094,66.8364 4154.1063,66.8364 Q4151.6063,66.8364 4150.2781,65.1957 Q4148.9656,63.5395 4148.9656,60.4145 Q4148.9656,57.2895 4150.2781,55.6332 Q4151.6063,53.977 4154.1063,53.977 Q4154.8094,53.977 4155.45,54.1332 Q4156.1063,54.2895 4156.6688,54.5864 L4156.6688,57.3051 Q4156.0438,56.727 4155.45,56.4614 Q4154.8563,56.1801 4154.2313,56.1801 Q4152.8875,56.1801 4152.2,57.2582 Q4151.5125,58.3207 4151.5125,60.4145 Q4151.5125,62.5082 4152.2,63.5864 Q4152.8875,64.6489 4154.2313,64.6489 Q4154.8563,64.6489 4155.45,64.3832 Q4156.0438,64.102 4156.6688,63.5239 L4156.6688,66.2426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="4173.3" y="66.034">SrpParameters</text><line style="stroke:#181818;stroke-width:0.5;" x1="4114.5" x2="4300.5" y1="76.602" y2="76.602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="4119.5" y="95.5679">+_groupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="4119.5" y="114.6358">+_sizeBits : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="4119.5" y="133.7038">+_nHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="4119.5" y="152.7717">+_g : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="4119.5" y="171.8396">+_groupName : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="4119.5" y="190.9075">+_hashName : std::string</text><line style="stroke:#181818;stroke-width:0.5;" x1="4114.5" x2="4300.5" y1="199.0095" y2="199.0095"/></g><!--class SrpParametersLoader--><g id="elem_SrpParametersLoader"><rect codeLine="203" fill="#F1F1F1" height="67.0679" id="SrpParametersLoader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="628" x="2853" y="78.102"/><ellipse cx="3089.75" cy="94.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3092.7188,99.7426 Q3092.1406,100.0395 3091.5,100.1801 Q3090.8594,100.3364 3090.1563,100.3364 Q3087.6563,100.3364 3086.3281,98.6957 Q3085.0156,97.0395 3085.0156,93.9145 Q3085.0156,90.7895 3086.3281,89.1332 Q3087.6563,87.477 3090.1563,87.477 Q3090.8594,87.477 3091.5,87.6332 Q3092.1563,87.7895 3092.7188,88.0864 L3092.7188,90.8051 Q3092.0938,90.227 3091.5,89.9614 Q3090.9063,89.6801 3090.2813,89.6801 Q3088.9375,89.6801 3088.25,90.7582 Q3087.5625,91.8207 3087.5625,93.9145 Q3087.5625,96.0082 3088.25,97.0864 Q3088.9375,98.1489 3090.2813,98.1489 Q3090.9063,98.1489 3091.5,97.8832 Q3092.0938,97.602 3092.7188,97.0239 L3092.7188,99.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="3110.25" y="99.534">SrpParametersLoader</text><line style="stroke:#181818;stroke-width:0.5;" x1="2854" x2="3480" y1="110.102" y2="110.102"/><line style="stroke:#181818;stroke-width:0.5;" x1="2854" x2="3480" y1="118.102" y2="118.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="616" x="2859" y="137.0679">+loadSrpParameters(filename : const std::string&amp;) : std::map&lt;unsigned int, SrpParameters&gt;</text></g><!--class SecureRemotePassword--><g id="elem_SecureRemotePassword"><rect codeLine="46" fill="#F1F1F1" height="543.7658" id="SecureRemotePassword" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1648" x="2343" y="620.602"/><ellipse cx="3082.25" cy="636.602" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3085.2188,642.2426 Q3084.6406,642.5395 3084,642.6801 Q3083.3594,642.8364 3082.6563,642.8364 Q3080.1563,642.8364 3078.8281,641.1957 Q3077.5156,639.5395 3077.5156,636.4145 Q3077.5156,633.2895 3078.8281,631.6332 Q3080.1563,629.977 3082.6563,629.977 Q3083.3594,629.977 3084,630.1332 Q3084.6563,630.2895 3085.2188,630.5864 L3085.2188,633.3051 Q3084.5938,632.727 3084,632.4614 Q3083.4063,632.1801 3082.7813,632.1801 Q3081.4375,632.1801 3080.75,633.2582 Q3080.0625,634.3207 3080.0625,636.4145 Q3080.0625,638.5082 3080.75,639.5864 Q3081.4375,640.6489 3082.7813,640.6489 Q3083.4063,640.6489 3084,640.3832 Q3084.5938,640.102 3085.2188,639.5239 L3085.2188,642.2426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="3102.75" y="642.034">SecureRemotePassword</text><line style="stroke:#181818;stroke-width:0.5;" x1="2344" x2="3990" y1="652.602" y2="652.602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="2349" y="671.5679">-_debugFlag : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="292" x="2349" y="690.6358">-_srpParametersFilename : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="575" x="2349" y="709.7038">-_srpParametersMap : std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="2349" y="728.7717">-_groupId : unsigned int = 0</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="232" x="2349" y="747.8396">-_minSizePrivateKey : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="485" x="2349" y="766.9075">-_hashMap : std::unordered_map&lt;std::string, EncryptionUtility::HashFn&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="557" x="2349" y="785.9754">-_kMap : const std::map&lt;unsigned int, MessageExtractionFacility::UniqueBIGNUM&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="2344" x2="3990" y1="794.0774" y2="794.0774"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="2349" y="813.0433">+SecureRemotePassword(debugFlag : const bool) {explicit}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="2349" y="832.1113">+~SecureRemotePassword()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="697" x="2349" y="851.1792">+calculateKMultiplierParameters() : std::map&lt;unsigned int, MessageExtractionFacility::UniqueBIGNUM&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="386" x="2349" y="870.2471">+getSrpParametersFilenameLocation() : const std::string&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="309" x="2349" y="889.315">+getMinSizePrivateKey() : const unsigned int&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="596" x="2349" y="908.3829">+getKMap() : const std::map&lt;unsigned int, MessageExtractionFacility::UniqueBIGNUM&gt;&amp;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="703" x="2349" y="927.4508">+getSrpParametersMap() : const std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;&amp; {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="619" x="2349" y="946.5188">+generatePrivateKey(NHex : const std::string&amp;, minSizeBits : const unsigned int) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1284" x="2349" y="965.5867">+calculatePublicKey(privateKeyHex : const std::string&amp;, NHex : const std::string&amp;, gHex : const std::string&amp;, isServer : bool, k : const BIGNUM* = nullptr, vHex : const std::string = "") : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="572" x="2349" y="984.6546">+validatePublicKey(publicKeyHex : const std::string&amp;, NHex : const std::string&amp;) : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="937" x="2349" y="1003.7225">+calculateK(NHex : const std::string&amp;, gHex : const std::string&amp;, hashName : const std::string&amp;) : MessageExtractionFacility::UniqueBIGNUM</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="2349" y="1022.7904">+calculateV(xHex : const std::string&amp;, NHex : const std::string&amp;, g : unsigned int) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="932" x="2349" y="1041.8583">+calculateU(hashName : const std::string&amp;, AHex : const std::string&amp;, BHex : const std::string&amp;, NHex : const std::string&amp;) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1008" x="2349" y="1060.9263">+calculateX(hashName : const std::string&amp;, username : const std::string&amp;, password : const std::string&amp;, saltHex : const std::string&amp;) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1346" x="2349" y="1079.9942">+calculateSClient(BHex : const std::string&amp;, kHex : const std::string&amp;, g : unsigned int, xHex : const std::string&amp;, aHex : const std::string&amp;, uHex : const std::string&amp;, NHex : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1065" x="2349" y="1099.0621">+calculateSServer(AHex : const std::string&amp;, vHex : const std::string&amp;, uHex : const std::string&amp;, bHex : const std::string&amp;, NHex : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="502" x="2349" y="1118.13">+calculateK(hash : const std::string&amp;, SHex : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="1636" x="2349" y="1137.1979">+calculateM(hashName : const std::string&amp;, NHex : const std::string&amp;, gHex : const std::string&amp;, username : const std::string&amp;, saltHex : const std::string&amp;, AHex : const std::string&amp;, BHex : const std::string&amp;, KHex : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="945" x="2349" y="1156.2658">+calculateM2(hashName : const std::string&amp;, AHex : const std::string&amp;, MHex : const std::string&amp;, KHex : const std::string&amp;) : const std::string</text></g><!--class HashFn--><g id="elem_HashFn"><rect codeLine="84" fill="#F1F1F1" height="80.4799" id="HashFn" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="313" x="4051" y="392.602"/><ellipse cx="4178.25" cy="415.308" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4181.2188,420.9486 Q4180.6406,421.2455 4180,421.3861 Q4179.3594,421.5424 4178.6563,421.5424 Q4176.1563,421.5424 4174.8281,419.9017 Q4173.5156,418.2455 4173.5156,415.1205 Q4173.5156,411.9955 4174.8281,410.3392 Q4176.1563,408.683 4178.6563,408.683 Q4179.3594,408.683 4180,408.8392 Q4180.6563,408.9955 4181.2188,409.2924 L4181.2188,412.0111 Q4180.5938,411.433 4180,411.1674 Q4179.4063,410.8861 4178.7813,410.8861 Q4177.4375,410.8861 4176.75,411.9642 Q4176.0625,413.0267 4176.0625,415.1205 Q4176.0625,417.2142 4176.75,418.2924 Q4177.4375,419.3549 4178.7813,419.3549 Q4179.4063,419.3549 4180,419.0892 Q4180.5938,418.808 4181.2188,418.2299 L4181.2188,420.9486 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="52" x="4197.75" y="410.4301">&#171;typedef&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="4198.75" y="428.912">HashFn</text><line style="stroke:#181818;stroke-width:0.5;" x1="4052" x2="4363" y1="438.014" y2="438.014"/><line style="stroke:#181818;stroke-width:0.5;" x1="4052" x2="4363" y1="446.014" y2="446.014"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="4057" y="464.9799">std::function&lt;std::string(const std::string &amp;)&gt;</text></g><!--class EncryptionUtility--><g id="elem_EncryptionUtility"><rect codeLine="88" fill="#F1F1F1" height="219.6113" id="EncryptionUtility" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="536" x="2899" y="322.602"/><ellipse cx="3107.25" cy="338.602" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3110.2188,344.2426 Q3109.6406,344.5395 3109,344.6801 Q3108.3594,344.8364 3107.6563,344.8364 Q3105.1563,344.8364 3103.8281,343.1957 Q3102.5156,341.5395 3102.5156,338.4145 Q3102.5156,335.2895 3103.8281,333.6332 Q3105.1563,331.977 3107.6563,331.977 Q3108.3594,331.977 3109,332.1332 Q3109.6563,332.2895 3110.2188,332.5864 L3110.2188,335.3051 Q3109.5938,334.727 3109,334.4614 Q3108.4063,334.1801 3107.7813,334.1801 Q3106.4375,334.1801 3105.75,335.2582 Q3105.0625,336.3207 3105.0625,338.4145 Q3105.0625,340.5082 3105.75,341.5864 Q3106.4375,342.6489 3107.7813,342.6489 Q3108.4063,342.6489 3109,342.3832 Q3109.5938,342.102 3110.2188,341.5239 L3110.2188,344.2426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="3127.75" y="344.034">EncryptionUtility</text><line style="stroke:#181818;stroke-width:0.5;" x1="2900" x2="3434" y1="354.602" y2="354.602"/><line style="stroke:#181818;stroke-width:0.5;" x1="2900" x2="3434" y1="362.602" y2="362.602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="499" x="2905" y="381.5679">+generateCryptographicNonce(length : const std::size_t) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="2905" y="400.6358">+sha1(input : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="2905" y="419.7038">+sha256(input : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="2905" y="438.7717">+sha384(input : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="2905" y="457.8396">+sha512(input : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="434" x="2905" y="476.9075">+getHashMap() : const std::unordered_map&lt;std::string, HashFn&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="2905" y="495.9754">+getMinSaltSizes() : const std::map&lt;std::string, unsigned int&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="484" x="2905" y="515.0433">+generatePassword(passwordLength : std::size_t = 16) : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="524" x="2905" y="534.1113">+padLeft(input : const std::vector&lt;uint8_t&gt;&amp;, size : size_t) : std::vector&lt;uint8_t&gt;</text></g><!--class UniqueBIGNUM--><g id="elem_UniqueBIGNUM"><rect codeLine="106" fill="#F1F1F1" height="80.4799" id="UniqueBIGNUM" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="309" x="4053" y="1268.602"/><ellipse cx="4149.75" cy="1291.308" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4152.7188,1296.9486 Q4152.1406,1297.2455 4151.5,1297.3861 Q4150.8594,1297.5424 4150.1563,1297.5424 Q4147.6563,1297.5424 4146.3281,1295.9017 Q4145.0156,1294.2455 4145.0156,1291.1205 Q4145.0156,1287.9955 4146.3281,1286.3392 Q4147.6563,1284.683 4150.1563,1284.683 Q4150.8594,1284.683 4151.5,1284.8392 Q4152.1563,1284.9955 4152.7188,1285.2924 L4152.7188,1288.0111 Q4152.0938,1287.433 4151.5,1287.1674 Q4150.9063,1286.8861 4150.2813,1286.8861 Q4148.9375,1286.8861 4148.25,1287.9642 Q4147.5625,1289.0267 4147.5625,1291.1205 Q4147.5625,1293.2142 4148.25,1294.2924 Q4148.9375,1295.3549 4150.2813,1295.3549 Q4150.9063,1295.3549 4151.5,1295.0892 Q4152.0938,1294.808 4152.7188,1294.2299 L4152.7188,1296.9486 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="52" x="4197.75" y="1286.4301">&#171;typedef&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="4170.25" y="1304.912">UniqueBIGNUM</text><line style="stroke:#181818;stroke-width:0.5;" x1="4054" x2="4361" y1="1314.014" y2="1314.014"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="4059" y="1332.9799">std::unique_ptr&lt;BIGNUM, BIGNUM_deleter&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="4054" x2="4361" y1="1341.0819" y2="1341.0819"/></g><!--class MessageExtractionFacility--><g id="elem_MessageExtractionFacility"><rect codeLine="110" fill="#F1F1F1" height="181.4754" id="MessageExtractionFacility" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="505" x="2914.5" y="1243.102"/><ellipse cx="3076.25" cy="1259.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3079.2188,1264.7426 Q3078.6406,1265.0395 3078,1265.1801 Q3077.3594,1265.3364 3076.6563,1265.3364 Q3074.1563,1265.3364 3072.8281,1263.6957 Q3071.5156,1262.0395 3071.5156,1258.9145 Q3071.5156,1255.7895 3072.8281,1254.1332 Q3074.1563,1252.477 3076.6563,1252.477 Q3077.3594,1252.477 3078,1252.6332 Q3078.6563,1252.7895 3079.2188,1253.0864 L3079.2188,1255.8051 Q3078.5938,1255.227 3078,1254.9614 Q3077.4063,1254.6801 3076.7813,1254.6801 Q3075.4375,1254.6801 3074.75,1255.7582 Q3074.0625,1256.8207 3074.0625,1258.9145 Q3074.0625,1261.0082 3074.75,1262.0864 Q3075.4375,1263.1489 3076.7813,1263.1489 Q3077.4063,1263.1489 3078,1262.8832 Q3078.5938,1262.602 3079.2188,1262.0239 L3079.2188,1264.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="3096.75" y="1264.534">MessageExtractionFacility</text><line style="stroke:#181818;stroke-width:0.5;" x1="2915.5" x2="3418.5" y1="1275.102" y2="1275.102"/><line style="stroke:#181818;stroke-width:0.5;" x1="2915.5" x2="3418.5" y1="1283.102" y2="1283.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="462" x="2920.5" y="1302.0679">+hexToBytes(hexStr : const std::string&amp;) : std::vector&lt;unsigned char&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="452" x="2920.5" y="1321.1358">+toHexString(data : const std::vector&lt;unsigned char&gt;&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="2920.5" y="1340.2038">+hexToPlaintext(hexString : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="493" x="2920.5" y="1359.2717">+hexToUniqueBIGNUM(hexNumber : const std::string&amp;) : UniqueBIGNUM</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="2920.5" y="1378.3396">+BIGNUMToHex(bn : BIGNUM*) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="2920.5" y="1397.4075">+BIGNUMToDec(bn : BIGNUM*) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="418" x="2920.5" y="1416.4754">+uintToHex(value : unsigned int, width : size_t = 2) : std::string</text></g><!--class Client--><g id="elem_Client"><rect codeLine="7" fill="#F1F1F1" height="581.9017" id="Client" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="708" x="7" y="107.602"/><ellipse cx="337.25" cy="123.602" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M340.2188,129.2426 Q339.6406,129.5395 339,129.6801 Q338.3594,129.8364 337.6563,129.8364 Q335.1563,129.8364 333.8281,128.1957 Q332.5156,126.5395 332.5156,123.4145 Q332.5156,120.2895 333.8281,118.6332 Q335.1563,116.977 337.6563,116.977 Q338.3594,116.977 339,117.1332 Q339.6563,117.2895 340.2188,117.5864 L340.2188,120.3051 Q339.5938,119.727 339,119.4614 Q338.4063,119.1801 337.7813,119.1801 Q336.4375,119.1801 335.75,120.2582 Q335.0625,121.3207 335.0625,123.4145 Q335.0625,125.5082 335.75,126.5864 Q336.4375,127.6489 337.7813,127.6489 Q338.4063,127.6489 339,127.3832 Q339.5938,127.102 340.2188,126.5239 L340.2188,129.2426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="357.75" y="129.034">Client</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="714" y1="139.602" y2="139.602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="13" y="158.5679">-_portServerProduction : int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="13" y="177.6358">-_portServerTest : int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="13" y="196.7038">-_clientId : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="13" y="215.7717">-_debugFlag : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="416" x="13" y="234.8396">-_minSaltSizesMap : const std::map&lt;std::string, unsigned int&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="13" y="253.9075">-_srpParametersFilename : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="575" x="13" y="272.9754">-_srpParametersMap : std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="13" y="292.0433">-_sessionData : std::unique_ptr&lt;SessionData&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="13" y="311.1113">-_passwordSize : const unsigned int = 20</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="373" x="13" y="330.1792">-_serverConfirmationMessage : const std::string = "Ack"</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="134" x="13" y="349.2471">-_isServerFlag : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="714" y1="357.3491" y2="357.3491"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="13" y="376.315">+Client(clientId : const std::string&amp;, debugFlag : const bool) {explicit}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="13" y="395.3829">+~Client()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="390" x="13" y="414.4508">+setProductionPort(portServerProduction : const int) : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="13" y="433.5188">+setTestPort(portServerTest : const int) : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="13" y="452.5867">+getClientId() : const std::string&amp; {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="13" y="471.6546">+getProductionPort() : const int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="13" y="490.7225">+getTestPort() : const int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="436" x="13" y="509.7904">+getSrpParametersFilenameLocation() : const std::string&amp; {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="530" x="13" y="528.8583">+registration(portServerNumber : const int, groupId : const int = 1) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="13" y="547.9263">+authentication(portServerNumber : const int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="162" x="13" y="566.9942">+getIsServerFlag() : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="696" x="13" y="586.0621">+calculateX(hash : const std::string&amp;, salt : const std::string&amp;, password : const std::string&amp;) : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="594" x="13" y="605.13">-registrationInit(portServerNumber : const int, groupId : const unsigned int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="635" x="13" y="624.1979">-registrationComplete(portServerNumber : const int, groupId : const unsigned int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="412" x="13" y="643.2658">-authenticationInit(portServerNumber : const int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="453" x="13" y="662.3338">-authenticationComplete(portServerNumber : const int) : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="413" x="13" y="681.4017">-printServerResponse(response : const cpr::Response&amp;) : void</text></g><!--class SessionData--><g id="elem_SessionData"><rect codeLine="168" fill="#F1F1F1" height="391.2225" id="SessionData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="861" x="1422" y="594.102"/><ellipse cx="1807.25" cy="610.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1810.2188,615.7426 Q1809.6406,616.0395 1809,616.1801 Q1808.3594,616.3364 1807.6563,616.3364 Q1805.1563,616.3364 1803.8281,614.6957 Q1802.5156,613.0395 1802.5156,609.9145 Q1802.5156,606.7895 1803.8281,605.1332 Q1805.1563,603.477 1807.6563,603.477 Q1808.3594,603.477 1809,603.6332 Q1809.6563,603.7895 1810.2188,604.0864 L1810.2188,606.8051 Q1809.5938,606.227 1809,605.9614 Q1808.4063,605.6801 1807.7813,605.6801 Q1806.4375,605.6801 1805.75,606.7582 Q1805.0625,607.8207 1805.0625,609.9145 Q1805.0625,612.0082 1805.75,613.0864 Q1806.4375,614.1489 1807.7813,614.1489 Q1808.4063,614.1489 1809,613.8832 Q1809.5938,613.602 1810.2188,613.0239 L1810.2188,615.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="1827.75" y="615.534">SessionData</text><line style="stroke:#181818;stroke-width:0.5;" x1="1423" x2="2282" y1="626.102" y2="626.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="582" x="1428" y="645.0679">-_secureRemotePassword : std::unique_ptr&lt;MyCryptoLibrary::SecureRemotePassword&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="1428" y="664.1358">-_groupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1428" y="683.2038">-_salt : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1428" y="702.2717">-_hash : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="1428" y="721.3396">-_password : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1428" y="740.4075">-_vHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="1428" y="759.4754">-_registrationComplete : bool = false</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="1428" y="778.5433">-_privateKeyHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="1428" y="797.6113">-_publicKeyHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="1428" y="816.6792">-_peerPublicKeyHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1428" y="835.7471">-_uHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1428" y="854.815">-_xHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1428" y="873.8829">-_SHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1428" y="892.9508">-_KHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="1428" y="912.0188">-_MHex : std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1428" y="931.0867">-_M2Hex : std::string</text><line style="stroke:#181818;stroke-width:0.5;" x1="1423" x2="2282" y1="939.1887" y2="939.1887"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="849" x="1428" y="958.1546">+SessionData(groupId : const unsigned int, salt : const std::string&amp;, hash : const std::string&amp;, debugFlag : const bool) {explicit}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1428" y="977.2225">+~SessionData()</text></g><!--class Server--><g id="elem_Server"><rect codeLine="124" fill="#F1F1F1" height="677.2413" id="Server" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="587" x="775" y="60.102"/><ellipse cx="1042.75" cy="76.102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1045.7188,81.7426 Q1045.1406,82.0395 1044.5,82.1801 Q1043.8594,82.3364 1043.1563,82.3364 Q1040.6563,82.3364 1039.3281,80.6957 Q1038.0156,79.0395 1038.0156,75.9145 Q1038.0156,72.7895 1039.3281,71.1332 Q1040.6563,69.477 1043.1563,69.477 Q1043.8594,69.477 1044.5,69.6332 Q1045.1563,69.7895 1045.7188,70.0864 L1045.7188,72.8051 Q1045.0938,72.227 1044.5,71.9614 Q1043.9063,71.6801 1043.2813,71.6801 Q1041.9375,71.6801 1041.25,72.7582 Q1040.5625,73.8207 1040.5625,75.9145 Q1040.5625,78.0082 1041.25,79.0864 Q1041.9375,80.1489 1043.2813,80.1489 Q1043.9063,80.1489 1044.5,79.8832 Q1045.0938,79.602 1045.7188,79.0239 L1045.7188,81.7426 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="1063.25" y="81.534">Server</text><line style="stroke:#181818;stroke-width:0.5;" x1="776" x2="1361" y1="92.102" y2="92.102"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="781" y="111.0679">-_app : crow::SimpleApp</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="396" x="781" y="130.1358">-_secureRemotePasswordMapMutex : std::mutex {mutable}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="781" y="149.2038">-_secureRemotePasswordMap : std::map&lt;std::string, std::unique_ptr&lt;SessionData&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="781" y="168.2717">-_portProduction : const int = 18080</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="781" y="187.3396">-_portTest : const int = 18081</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="781" y="206.4075">-_serverThread : std::thread</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="781" y="225.4754">-_debugFlag : const bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="781" y="244.5433">-_srpParametersFilename : const std::string</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="575" x="781" y="263.6113">-_srpParametersMap : std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="781" y="282.6792">-_defaultGroupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="781" y="301.7471">-_minGroupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="781" y="320.815">-_maxGroupId : unsigned int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="416" x="781" y="339.8829">-_minSaltSizesMap : const std::map&lt;std::string, unsigned int&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="525" x="781" y="358.9508">-_hashMap : const std::unordered_map&lt;std::string, EncryptionUtility::HashFn&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="134" x="781" y="378.0188">-_isServerFlag : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="776" x2="1361" y1="386.1207" y2="386.1207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="781" y="405.0867">+Server(debugFlag : const bool, defaultGroupId : const unsigned int = 3) {explicit}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="781" y="424.1546">+~Server()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="781" y="443.2225">+runServer() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="781" y="462.2904">+runServerTest() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="280" x="781" y="481.3583">+clearSecureRemotePasswordMap() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="781" y="500.4263">+getProductionPort() : const int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="781" y="519.4942">+getTestPort() : const int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="436" x="781" y="538.5621">+getSrpParametersFilenameLocation() : const std::string&amp; {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="331" x="781" y="557.63">+getDefaultGroupId() : const unsigned int {const}</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="162" x="781" y="576.6979">+getIsServerFlag() : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="781" y="595.7658">-setupRoutes() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="781" y="614.8338">-rootEndpoint() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="781" y="633.9017">-handleRegisterInit() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="781" y="652.9696">-handleRegisterComplete() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="781" y="672.0375">-handleAuthenticationInit() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="781" y="691.1054">-handleAuthenticationComplete() : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="481" x="781" y="710.1733">-vValidation(clientId : const std::string&amp;, vHex : const std::string&amp;) : bool</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="781" y="729.2413">-registeredUsersEndpoint() : void</text></g><g id="elem_ServerEndpointsNote"><path d="M1591.5,340.602 L1591.5,394.602 L1362.11,398.602 L1591.5,402.602 L1591.5,456.8381 A0,0 0 0 0 1591.5,456.8381 L2113.5,456.8381 A0,0 0 0 0 2113.5,456.8381 L2113.5,350.602 L2103.5,340.602 L1591.5,340.602 A0,0 0 0 0 1591.5,340.602 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M2103.5,340.602 L2103.5,350.602 L2113.5,350.602 L2103.5,340.602 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="139" x="1597.5" y="359.499">Exposes API Endpoints:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1597.5" y="377.205">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="166" x="1604.5" y="377.205">POST /handleRegisterInit</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="222" x="1773.5" y="377.205">(First part of the registration process)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1597.5" y="394.911">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="205" x="1604.5" y="394.911">POST /handleRegisterComplete</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="221" x="1812.5" y="394.911">(Last part of the registration process)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1597.5" y="412.617">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="213" x="1604.5" y="412.617">POST /handleAuthenticationInit</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="240" x="1820.5" y="412.617">(First part of the authentication process)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1597.5" y="430.3231">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="252" x="1604.5" y="430.3231">POST /handleAuthenticationComplete</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="239" x="1859.5" y="430.3231">(Last part of the authentication process)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="1597.5" y="448.0291">-</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="195" x="1604.5" y="448.0291">GET /registeredUsersEndpoint</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="193" x="1802.5" y="448.0291">(Returns all the registered users)</text></g><!--link Client to SessionData--><g id="link_Client_SessionData"><path codeLine="39" d="M361,689.872 C361,782.372 361,861.102 361,861.102 C361,861.102 975.3,861.102 1415.85,861.102 " fill="none" id="Client-to-SessionData" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1421.85,861.102,1412.85,857.102,1416.85,861.102,1412.85,865.102,1421.85,861.102" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="753.81" y="875.999">contains</text></g><!--link Client to SrpParameters--><g id="link_Client_SrpParameters"><path codeLine="40" d="M361,107.602 C361,74.502 361,52.352 361,52.352 C361,52.352 3517.49,52.352 4107.37,52.352 " fill="none" id="Client-to-SrpParameters" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4113.37,52.352,4104.37,48.352,4108.37,52.352,4104.37,56.352,4113.37,52.352" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="2157.56" y="67.249">contains</text></g><!--link Client to Server--><g id="link_Client_Server"><path codeLine="42" d="M715.01,398.602 C735.04,398.602 749.06,398.602 768.83,398.602 " fill="none" id="Client-to-Server" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="774.83,398.602,765.83,394.602,769.83,398.602,765.83,402.602,774.83,398.602" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="131" x="612.92" y="413.499">&#171;uses HTTP requests&#187;</text></g><!--link SecureRemotePassword to SrpParameters--><g id="link_SecureRemotePassword_SrpParameters"><path codeLine="77" d="M3651,620.462 C3651,421.442 3651,186.102 3651,186.102 C3651,186.102 3948.73,186.102 4107.41,186.102 " fill="none" id="SecureRemotePassword-to-SrpParameters" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4113.41,186.102,4104.41,182.102,4108.41,186.102,4104.41,190.102,4113.41,186.102" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="3613.03" y="200.999">contains</text></g><!--link SecureRemotePassword to HashFn--><g id="link_SecureRemotePassword_HashFn"><path codeLine="78" d="M3821,620.552 C3821,527.282 3821,445.932 3821,445.932 C3821,445.932 3937.72,445.932 4044.85,445.932 " fill="none" id="SecureRemotePassword-to-HashFn" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4050.85,445.932,4041.85,441.932,4045.85,445.932,4041.85,449.932,4050.85,445.932" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3820.62" y="460.829">uses</text></g><!--link SecureRemotePassword to UniqueBIGNUM--><g id="link_SecureRemotePassword_UniqueBIGNUM"><path codeLine="79" d="M3706,1164.812 C3706,1237.012 3706,1295.272 3706,1295.272 C3706,1295.272 3899.59,1295.272 4046.94,1295.272 " fill="none" id="SecureRemotePassword-to-UniqueBIGNUM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4052.94,1295.272,4043.94,1291.272,4047.94,1295.272,4043.94,1299.272,4052.94,1295.272" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3786.24" y="1310.169">uses</text></g><!--link EncryptionUtility to HashFn--><g id="link_EncryptionUtility_HashFn"><path codeLine="100" d="M3435.29,419.272 C3630.54,419.272 3882.19,419.272 4044.9,419.272 " fill="none" id="EncryptionUtility-to-HashFn" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4050.9,419.272,4041.9,415.272,4045.9,419.272,4041.9,423.272,4050.9,419.272" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3715.1" y="434.169">uses</text></g><!--link MessageExtractionFacility to UniqueBIGNUM--><g id="link_MessageExtractionFacility_UniqueBIGNUM"><path codeLine="120" d="M3419.54,1321.932 C3617.28,1321.932 3879.95,1321.932 4046.93,1321.932 " fill="none" id="MessageExtractionFacility-to-UniqueBIGNUM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4052.93,1321.932,4043.93,1317.932,4047.93,1321.932,4043.93,1325.932,4052.93,1321.932" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3708.24" y="1336.829">uses</text></g><!--link Server to SessionData--><g id="link_Server_SessionData"><path codeLine="161" d="M1362.11,665.602 C1381.78,665.602 1395.8,665.602 1415.96,665.602 " fill="none" id="Server-to-SessionData" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1421.96,665.602,1412.96,661.602,1416.96,665.602,1412.96,669.602,1421.96,665.602" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="1340.03" y="680.499">contains</text></g><!--link Server to SrpParameters--><g id="link_Server_SrpParameters"><path codeLine="162" d="M1362.05,165.602 C2042.51,165.602 3695.02,165.602 4107.46,165.602 " fill="none" id="Server-to-SrpParameters" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4113.46,165.602,4104.46,161.602,4108.46,165.602,4104.46,169.602,4113.46,165.602" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="2685.75" y="180.499">contains</text></g><!--link Server to HashFn--><g id="link_Server_HashFn"><path codeLine="163" d="M1362.34,264.602 C2120.37,264.602 4083,264.602 4083,264.602 C4083,264.602 4083,336.662 4083,386.362 " fill="none" id="Server-to-HashFn" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4083,392.362,4087,383.362,4083,387.362,4079,383.362,4083,392.362" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="2758.55" y="279.499">uses</text></g><!--link SessionData to SecureRemotePassword--><g id="link_SessionData_SecureRemotePassword"><path codeLine="190" d="M2283.37,802.852 C2302.93,802.852 2316.79,802.852 2336.88,802.852 " fill="none" id="SessionData-to-SecureRemotePassword" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="2342.88,802.852,2333.88,798.852,2337.88,802.852,2333.88,806.852,2342.88,802.852" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="2261.12" y="817.749">contains</text></g><!--link SrpParametersLoader to SrpParameters--><g id="link_SrpParametersLoader_SrpParameters"><path codeLine="207" d="M3481.3,111.602 C3698.17,111.602 3965.97,111.602 4107.38,111.602 " fill="none" id="SrpParametersLoader-to-SrpParameters" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4113.38,111.602,4104.38,107.602,4108.38,111.602,4104.38,115.602,4113.38,111.602" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="3769.34" y="126.499">uses</text></g><!--SRC=[pHfTJzj8y3s_OiK3icdWABrMAAAHW49142uYKFNX9BInDyaAO_lMwpGSudxxpTfhUzTUVoIbKljIaldOsVdScOb7PXpn034wNt3aKaOSJWE_ruiUgHzYXf-Gu-4eEkQSqMdCoQKJ-1FwBq7x2ef7VSAVGu82nXT1hvUGe5EF4f-Zbnw2Vxle8GJeXB0bOMCMk75o41eWwlCgnXs9k0vp4cwNBdmB8W0qukvW485O_Zp3SSaqdfzxU9uZJOF0ow1Fr9zWZmlfen4ETKPFE3nIEFPHx4TqxXDNo33CM4Gi78iR4qvOT4uzuiFVJH9f1EcX-N7g2NqqKJ6l0-mIDXXeNnPIa2W2tNt176VyOf_-4vE7aBEZIG7DAKAmnu-0kOdbCd7Lyz5dTB1Vy1ScE0ty6MLFM9Xf13pnt7XJeDmwTXwtCc8QfHQKPX06G2yH1pREQoz1UYSzmseowNOVcQrfenUo2ZtgKFugsVqd-TdoSqHuuM5Zy2chnlLIhd1z6pui0-eM38G3baYbJzOHpGa_bHUoREELq4lotMj1K1BJLjbNiNEPMl0c9Y-z3fp4bDraOsHE0P9I52guYP-cXAcdzz6S1N6e637rflTsDGRV8Hpp1MY8EksCZVHmkKl5lvAxw1wMuZdOSs8FS_BTMk1eKUDW4MI36b0MC4QmdKMTZ03jy5rDTvS-vMlgJmrBsvJ8LFwdmLFeWPtV-WpTKAstwC2ZawH6FY4eMLBSaYW4CB6O_2F7Tq98bnbuEmlDmZIGUsGzsjiReecMGO43nzIFD8ngEjxJlbFfCiBTNS5Q20hGhQEZ638rkhYx6uFD83r7F1eEjtez4OvHY1s2Hi-dx3damJMTCioUeLOcTqxhvuGuCIEtv2dWP9pvOrfD3VKkLzYwfKfttrzMjoJZmXDBvMTVnHAb6ahLcD4b1F4LUIxZcsGMaQw86lkWByA8-r2fxMU-8zGE7d3FgKVvys1m0SJd_j38-D7uMj3L82lasGe2CqdevzYHhE-Jsdno-VNcVZGirS8qNPaiRNKiVx846bdO2aQU4gz6iSSfi81YcDl8ikijlFxLYbCthaP6LgEoMoZaginrz5TWoFA9czztkyk5EvtO8ORq0fsTvHCe0we-RYx8ggQaoPWweJoghGEDQK7neN4y1HSK1uRvsVKdDmWrhmTb3qcPs_heCKTC3R03MSEFFGyUlNsqh64adgTR7Qwsn1vrzPjbVsrmCVExf1o8rcQA4NdkfYQP9oTtTE16uRvPgyqCMihKThUIevnyRpLUi8-Ewqy_sT1MwqdulKr2gFlChmStFYxJP-dR2JkHpL63QXwxcxEF6jm2ruFY3GtJ-PPfhh0QV6EvaNJJNopuLLE3CdcB4qPjthfP5chnyIOdtZI4hzv47GS_aLz66mhN4h99UrBg1VQCp_-rMvFEN2jluhtqIImI0BGntHdLLfyzhVX8jcetL151xuUaF4T7OjJeajbmg7H3YMvdiP-SgBxshQhkj-sXLBl2tNHuzQcLwc3ESBYWpatWEyI21-sSboCO7beFvjgdC8qM-Bq5CzIOT_5gdV3WuwTDIJyS_hafwSVt1nkHmglu8ktEoe_XXYvDjcJL5Y0RufeUrYqptDB3EMkKiefydTbIiQ8OPdrgCsM8WNR6JSfPmaWzO4Sno73um8SYDwPJsC99J7YgXrPzKmIQ7fyYXIY3XReWr4DAYyY6m5B6ooboNxx1OGGXXZhC451D8XIAMv3LNN3opC6QyEU4isRFofIK6TPPOAPQbWSN2HSH-6u-tIcRGgDkSDj4kB47YPIJ5PS2YWoodlSdR5HL2qwbuLUPaugki4g_k1EtjAR2zh8LgZyye_X2d8uKmWFJ4w0fYadb1VY3kccCPE5nOE8bVQ7U2uGB6ol2QxP0alrVla32OJA6OS4Fw8wf62SUXs6njAZM8yWt8zXPhVBPHlBX1Vx3Ku-yjf2g4n4jhJHjN8RgBikyR109vN3_S5_5BEyM9CvxVILpjs04kvbSFFdKRVVrUook8BTW63vzDSu0bJLT2m9UjNBusKLVCKliLglg9uhhxCLa4sCsfLY8bTHdtEDzC6t89ETiGyPYF_j6NsBb0E6GPQ3Z4Smcvc2ngjkmttQv1Lo-QAgi6IDMoJeidtR5zZ0ERuEOonTAhXLOtGG1F_FTCA0-ByCMs7SzKAnOxX2Mh5mQCVA5YX7hkBh0wO1NntFvBHsF2HMtR6sNRJCnROibekaUabjKrGf4XIm03HiR5METjaYXQsjyUZvuEjewMuM1MESSZozH9cmq-DlVHJixuxycT-YFgW5tTf1rJXae0dudmL4mGw1iRNy7owt0WQlPzOmocmXcrtWpNbLlC8kch-mwCsmKiP7drpDWMUCAWjijn1Bp8uGzJxclG4q6496zXN3sKCYjSWC6AoniXEOlZCAhNfgU0uRVMPGQOgXv1hey_SyRAvRSH1lgi9mE6I1XIJGTAiFG036jZxDCzXdDi1UH_8ZISDyaXJubDs4GM3IrOiMra5KjP58BkQg5ZEeX1rLGNfTpDx6QLkcDFobecFDr_wMBAecTfiZ2WvFfIvSnZRgwBdf6Gm8jBQIrRAfsSKtkBJ6YOlTKX-ARRPCTqK2P72z7UZNaoj2lfbKnN3BNGi78Wwyq76lMy9pUjZi-dBK6sYH3fSGf_TB_]--></g></svg>