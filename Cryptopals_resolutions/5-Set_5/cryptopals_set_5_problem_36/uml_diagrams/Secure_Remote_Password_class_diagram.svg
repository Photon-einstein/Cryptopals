<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="771px" preserveAspectRatio="none" style="width:1889px;height:771px;background:#FFFFFF;" version="1.1" viewBox="0 0 1889 771" width="1889px" zoomAndPan="magnify"><defs/><g><!--cluster EncryptionUtility--><g id="cluster_EncryptionUtility"><path d="M742.5,150 L861.5,150 A3.75,3.75 0 0 1 864,152.5 L871,175.0679 L1311.5,175.0679 A2.5,2.5 0 0 1 1314,177.5679 L1314,761.5 A2.5,2.5 0 0 1 1311.5,764 L742.5,764 A2.5,2.5 0 0 1 740,761.5 L740,152.5 A2.5,2.5 0 0 1 742.5,150 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="740" x2="871" y1="175.0679" y2="175.0679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="118" x="744" y="166.9659">EncryptionUtility</text></g><!--cluster MessageExtractionFacility--><g id="cluster_MessageExtractionFacility"><path d="M1340.5,169.5 L1521.5,169.5 A3.75,3.75 0 0 1 1524,172 L1531,194.5679 L1879.5,194.5679 A2.5,2.5 0 0 1 1882,197.0679 L1882,761.5 A2.5,2.5 0 0 1 1879.5,764 L1340.5,764 A2.5,2.5 0 0 1 1338,761.5 L1338,172 A2.5,2.5 0 0 1 1340.5,169.5 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1338" x2="1531" y1="194.5679" y2="194.5679"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="180" x="1342" y="186.4659">MessageExtractionFacility</text></g><!--class HashFn--><g id="elem_HashFn"><rect codeLine="36" fill="#F1F1F1" height="80.4799" id="HashFn" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="313" x="870.5" y="668"/><ellipse cx="997.75" cy="690.706" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1000.7188,696.3466 Q1000.1406,696.6435 999.5,696.7841 Q998.8594,696.9404 998.1563,696.9404 Q995.6563,696.9404 994.3281,695.2998 Q993.0156,693.6435 993.0156,690.5185 Q993.0156,687.3935 994.3281,685.7373 Q995.6563,684.081 998.1563,684.081 Q998.8594,684.081 999.5,684.2373 Q1000.1563,684.3935 1000.7188,684.6904 L1000.7188,687.4091 Q1000.0938,686.831 999.5,686.5654 Q998.9063,686.2841 998.2813,686.2841 Q996.9375,686.2841 996.25,687.3623 Q995.5625,688.4248 995.5625,690.5185 Q995.5625,692.6123 996.25,693.6904 Q996.9375,694.7529 998.2813,694.7529 Q998.9063,694.7529 999.5,694.4873 Q1000.0938,694.206 1000.7188,693.6279 L1000.7188,696.3466 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="52" x="1017.25" y="685.8281">&#171;typedef&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="1018.25" y="704.31">HashFn</text><line style="stroke:#181818;stroke-width:0.5;" x1="871.5" x2="1182.5" y1="713.412" y2="713.412"/><line style="stroke:#181818;stroke-width:0.5;" x1="871.5" x2="1182.5" y1="721.412" y2="721.412"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="876.5" y="740.378">std::function&lt;std::string(const std::string &amp;)&gt;</text></g><!--class EncryptionUtility--><g id="elem_EncryptionUtility"><rect codeLine="40" fill="#F1F1F1" height="219.6113" id="EncryptionUtility" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="542" x="756" y="188"/><ellipse cx="967.25" cy="204" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M970.2188,209.6406 Q969.6406,209.9375 969,210.0781 Q968.3594,210.2344 967.6563,210.2344 Q965.1563,210.2344 963.8281,208.5938 Q962.5156,206.9375 962.5156,203.8125 Q962.5156,200.6875 963.8281,199.0313 Q965.1563,197.375 967.6563,197.375 Q968.3594,197.375 969,197.5313 Q969.6563,197.6875 970.2188,197.9844 L970.2188,200.7031 Q969.5938,200.125 969,199.8594 Q968.4063,199.5781 967.7813,199.5781 Q966.4375,199.5781 965.75,200.6563 Q965.0625,201.7188 965.0625,203.8125 Q965.0625,205.9063 965.75,206.9844 Q966.4375,208.0469 967.7813,208.0469 Q968.4063,208.0469 969,207.7813 Q969.5938,207.5 970.2188,206.9219 L970.2188,209.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="987.75" y="209.432">EncryptionUtility</text><line style="stroke:#181818;stroke-width:0.5;" x1="757" x2="1297" y1="220" y2="220"/><line style="stroke:#181818;stroke-width:0.5;" x1="757" x2="1297" y1="228" y2="228"/><ellipse cx="767" cy="243.034" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="491" x="776" y="246.9659">generateCryptographicNonce(length : const std::size_t) : const std::string</text><ellipse cx="767" cy="262.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="776" y="266.0339">sha1(input : const std::string&amp;) : std::string</text><ellipse cx="767" cy="281.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="776" y="285.1018">sha256(input : const std::string&amp;) : std::string</text><ellipse cx="767" cy="300.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="776" y="304.1697">sha384(input : const std::string&amp;) : std::string</text><ellipse cx="767" cy="319.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="776" y="323.2376">sha512(input : const std::string&amp;) : std::string</text><ellipse cx="767" cy="338.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="426" x="776" y="342.3055">getHashMap() : const std::unordered_map&lt;std::string, HashFn&gt;</text><ellipse cx="767" cy="357.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="776" y="361.3734">getMinSaltSizes() : const std::map&lt;std::string, unsigned int&gt;</text><ellipse cx="767" cy="376.5094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="476" x="776" y="380.4414">generatePassword(passwordLength : std::size_t = 16) : const std::string</text><ellipse cx="767" cy="395.5773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516" x="776" y="399.5093">padLeft(input : const std::vector&lt;uint8_t&gt;&amp;, size : size_t) : std::vector&lt;uint8_t&gt;</text></g><!--class UniqueBIGNUM--><g id="elem_UniqueBIGNUM"><rect codeLine="58" fill="#F1F1F1" height="80.4799" id="UniqueBIGNUM" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="309" x="1455.5" y="668"/><ellipse cx="1552.25" cy="690.706" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1555.2188,696.3466 Q1554.6406,696.6435 1554,696.7841 Q1553.3594,696.9404 1552.6563,696.9404 Q1550.1563,696.9404 1548.8281,695.2998 Q1547.5156,693.6435 1547.5156,690.5185 Q1547.5156,687.3935 1548.8281,685.7373 Q1550.1563,684.081 1552.6563,684.081 Q1553.3594,684.081 1554,684.2373 Q1554.6563,684.3935 1555.2188,684.6904 L1555.2188,687.4091 Q1554.5938,686.831 1554,686.5654 Q1553.4063,686.2841 1552.7813,686.2841 Q1551.4375,686.2841 1550.75,687.3623 Q1550.0625,688.4248 1550.0625,690.5185 Q1550.0625,692.6123 1550.75,693.6904 Q1551.4375,694.7529 1552.7813,694.7529 Q1553.4063,694.7529 1554,694.4873 Q1554.5938,694.206 1555.2188,693.6279 L1555.2188,696.3466 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="52" x="1600.25" y="685.8281">&#171;typedef&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1572.75" y="704.31">UniqueBIGNUM</text><line style="stroke:#181818;stroke-width:0.5;" x1="1456.5" x2="1763.5" y1="713.412" y2="713.412"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="1461.5" y="732.378">std::unique_ptr&lt;BIGNUM, BIGNUM_deleter&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1456.5" x2="1763.5" y1="740.4799" y2="740.4799"/></g><!--class MessageExtractionFacility--><g id="elem_MessageExtractionFacility"><rect codeLine="62" fill="#F1F1F1" height="181.4754" id="MessageExtractionFacility" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="511" x="1354.5" y="207.5"/><ellipse cx="1519.25" cy="223.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1522.2188,229.1406 Q1521.6406,229.4375 1521,229.5781 Q1520.3594,229.7344 1519.6563,229.7344 Q1517.1563,229.7344 1515.8281,228.0938 Q1514.5156,226.4375 1514.5156,223.3125 Q1514.5156,220.1875 1515.8281,218.5313 Q1517.1563,216.875 1519.6563,216.875 Q1520.3594,216.875 1521,217.0313 Q1521.6563,217.1875 1522.2188,217.4844 L1522.2188,220.2031 Q1521.5938,219.625 1521,219.3594 Q1520.4063,219.0781 1519.7813,219.0781 Q1518.4375,219.0781 1517.75,220.1563 Q1517.0625,221.2188 1517.0625,223.3125 Q1517.0625,225.4063 1517.75,226.4844 Q1518.4375,227.5469 1519.7813,227.5469 Q1520.4063,227.5469 1521,227.2813 Q1521.5938,227 1522.2188,226.4219 L1522.2188,229.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="1539.75" y="228.932">MessageExtractionFacility</text><line style="stroke:#181818;stroke-width:0.5;" x1="1355.5" x2="1864.5" y1="239.5" y2="239.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="1355.5" x2="1864.5" y1="247.5" y2="247.5"/><ellipse cx="1365.5" cy="262.534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="454" x="1374.5" y="266.4659">hexToBytes(hexStr : const std::string&amp;) : std::vector&lt;unsigned char&gt;</text><ellipse cx="1365.5" cy="281.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="1374.5" y="285.5339">toHexString(data : const std::vector&lt;unsigned char&gt;&amp;) : std::string</text><ellipse cx="1365.5" cy="300.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="1374.5" y="304.6018">hexToPlaintext(hexString : const std::string&amp;) : std::string</text><ellipse cx="1365.5" cy="319.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="485" x="1374.5" y="323.6697">hexToUniqueBIGNUM(hexNumber : const std::string&amp;) : UniqueBIGNUM</text><ellipse cx="1365.5" cy="338.8056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="1374.5" y="342.7376">BIGNUMToHex(bn : BIGNUM*) : std::string</text><ellipse cx="1365.5" cy="357.8735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="1374.5" y="361.8055">BIGNUMToDec(bn : BIGNUM*) : std::string</text><ellipse cx="1365.5" cy="376.9415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="410" x="1374.5" y="380.8734">uintToHex(value : unsigned int, width : size_t = 2) : std::string</text></g><!--class Client--><g id="elem_Client"><rect codeLine="2" fill="#F1F1F1" height="581.9017" id="Client" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="714" x="7" y="7"/><ellipse cx="340.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M343.2188,28.6406 Q342.6406,28.9375 342,29.0781 Q341.3594,29.2344 340.6563,29.2344 Q338.1563,29.2344 336.8281,27.5938 Q335.5156,25.9375 335.5156,22.8125 Q335.5156,19.6875 336.8281,18.0313 Q338.1563,16.375 340.6563,16.375 Q341.3594,16.375 342,16.5313 Q342.6563,16.6875 343.2188,16.9844 L343.2188,19.7031 Q342.5938,19.125 342,18.8594 Q341.4063,18.5781 340.7813,18.5781 Q339.4375,18.5781 338.75,19.6563 Q338.0625,20.7188 338.0625,22.8125 Q338.0625,24.9063 338.75,25.9844 Q339.4375,27.0469 340.7813,27.0469 Q341.4063,27.0469 342,26.7813 Q342.5938,26.5 343.2188,25.9219 L343.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="360.75" y="28.432">Client</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="720" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="51.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="27" y="57.9659">_portServerProduction : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="70.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="27" y="77.0339">_portServerTest : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="89.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="27" y="96.1018">_clientId : const std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="108.2377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="27" y="115.1697">_debugFlag : const bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="127.3056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="411" x="27" y="134.2376">_minSaltSizesMap : const std::map&lt;std::string, unsigned int&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="146.3735"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="27" y="153.3055">_srpParametersFilename : const std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="165.4415"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="570" x="27" y="172.3734">_srpParametersMap : std::map&lt;unsigned int, SrpParametersLoader::SrpParameters&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="184.5094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="27" y="191.4414">_sessionData : std::unique_ptr&lt;SessionData&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="203.5773"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="27" y="210.5093">_passwordSize : const unsigned int = 20</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="222.6452"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="368" x="27" y="229.5772">_serverConfirmationMessage : const std::string = "Ack"</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="241.7131"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="129" x="27" y="248.6451">_isServerFlag : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="720" y1="256.7471" y2="256.7471"/><ellipse cx="18" cy="271.781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="452" x="27" y="275.713">Client(clientId : const std::string&amp;, debugFlag : const bool) {explicit}</text><ellipse cx="18" cy="290.849" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="27" y="294.7809">~Client()</text><ellipse cx="18" cy="309.9169" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="382" x="27" y="313.8489">setProductionPort(portServerProduction : const int) : void</text><ellipse cx="18" cy="328.9848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="27" y="332.9168">setTestPort(portServerTest : const int) : void</text><ellipse cx="18" cy="348.0527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="27" y="351.9847">getClientId() : const std::string&amp; {const}</text><ellipse cx="18" cy="367.1206" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="27" y="371.0526">getProductionPort() : const int {const}</text><ellipse cx="18" cy="386.1885" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="27" y="390.1205">getTestPort() : const int {const}</text><ellipse cx="18" cy="405.2565" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="428" x="27" y="409.1884">getSrpParametersFilenameLocation() : const std::string&amp; {const}</text><ellipse cx="18" cy="424.3244" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="522" x="27" y="428.2564">registration(portServerNumber : const int, groupId : const int = 1) : const bool</text><ellipse cx="18" cy="443.3923" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="27" y="447.3243">authentication(portServerNumber : const int) : const bool</text><ellipse cx="18" cy="462.4602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="154" x="27" y="466.3922">getIsServerFlag() : bool</text><ellipse cx="18" cy="481.5281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="688" x="27" y="485.4601">calculateX(hash : const std::string&amp;, salt : const std::string&amp;, password : const std::string&amp;) : std::string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="497.596"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="589" x="27" y="504.528">registrationInit(portServerNumber : const int, groupId : const unsigned int) : const bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="516.664"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="630" x="27" y="523.5959">registrationComplete(portServerNumber : const int, groupId : const unsigned int) : const bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="535.7319"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407" x="27" y="542.6639">authenticationInit(portServerNumber : const int) : const bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="554.7998"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448" x="27" y="561.7318">authenticationComplete(portServerNumber : const int) : const bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="573.8677"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="408" x="27" y="580.7997">printServerResponse(response : const cpr::Response&amp;) : void</text></g><!--link EncryptionUtility to HashFn--><g id="link_EncryptionUtility_HashFn"><path codeLine="52" d="M1027,408.07 C1027,493.76 1027,602.2 1027,661.56 " fill="none" id="EncryptionUtility-to-HashFn" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1027,667.56,1031,658.56,1027,662.56,1023,658.56,1027,667.56" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="1028" y="633.897">uses</text></g><!--link MessageExtractionFacility to UniqueBIGNUM--><g id="link_MessageExtractionFacility_UniqueBIGNUM"><path codeLine="72" d="M1610,388.54 C1610,475.68 1610,598.03 1610,661.9 " fill="none" id="MessageExtractionFacility-to-UniqueBIGNUM" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1610,667.9,1614,658.9,1610,662.9,1606,658.9,1610,667.9" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="1611" y="633.897">uses</text></g><!--SRC=[hLRVJzim47xdhx1uGCaeQB21KDLL6WKs943L2jBUAkCSgRNKzco77qFiRzyvYHkdJKj1wqkJ-EwxyttVdSqoQWmPP1o49SyR17yxPAoajYFGzw27MYOvirmAqYLSs4MBQp2skSOAjFC4lp8fSDNOfDirLdEHUfi4RlFqBAFfpEXMoiolJhaOqSoE-1ymbrGrWQPKzGB43ic5uQc0nENGzn16go7LT0eMj3dZ6GXyNfLHmw4CEWiNHkYGKMXv8Ma2kjjjVAop06EmTYVKKe-N2_uxXx6okZUgLsSU2lbua3fnUv-b6yOdNyZ-nnhVKJ2GuexhANKqNI8cJLjtYfwRNzclJU_CJSbWHOCZW3mRYp3iPQCmsgwK4QsYTAj3sjcCoJCygempRbygkByLNboz6x2rmeQegMY9z4fKt7wCB_UI9pM04-2SQwN9PKufs46reIXktH9vBhwzr0vpQSOX_ABrBATNx4PjAhsGhA1olTmqf1nNIe-w15Vvz1Pq6Br3KYrp5P1OgcalNkp1RK9pEy4ASVOwSAi_Rkuyq5UnbwR2IZj6CvPdrCBFQ4BDP8d034w39Kk-OLgNOzzrLGSqWkyqQdSkk7rZ_SAsZDi6MOW_a5EL8S__EqQJg5TtiGR6MfcsuYWiSkNn0up2POXqzJ2pPmh7fL_UygrPKuEpntM1KPG1EHLCFocNrOtb6RTFU4WLmLXnS7r7oPm9qklP9mK9tFNxrI7cVWNnTxaekZOyCgB5qRWLbnFu9KHl2-x1dS858BKmS3OorLHDEBkIWa64VPpQUItZG1_RUEaHLCsp2TsBk52vNKVFJSVzWyFtkduw-lnUruEz_NUvue1mxE59Ep_dSe7j31gIyS9HN_BTRy9S1hU5UQmrBWjDDeVLE8dyNBdmN0Oikgbv-1gLYgBldMqhpZqmAtKlnnoEnhRl1bnvtDSYQRCB5RgepTtTlk-7Bidnvh7HRANgPd3wY0EfQ8apobfQwgQudnoVVxkwkLpLMC4zfZJkaF8VxtPkUkYMXbgLGbsu2JnUo-CdYspYuyZgrShoHVB4iWdL8RDMVYzGNECdvKMiXOg6zmhP5iaDCugKmAEj4dGJv6tgBs32KZkakIaxZnIQ1r3bXskto-ZMSLz- -B0ykFSu0RQcXrDW6U6UPhbJQlDA_C2JiaTyU-otOLLQMAu29-66_W8XR_m3]--></g></svg>